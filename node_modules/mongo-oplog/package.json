{
  "name": "mongo-oplog",
  "version": "0.1.6",
  "description": "Watch mongodb oplog in a simple way",
  "author": {
    "name": "Jonathan Brumley",
    "email": "cayasso@gmail.com"
  },
  "homepage": "https://github.com/cayasso/mongo-oplog",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cayasso/mongo-oplog.git"
  },
  "keywords": [
    "data",
    "mongo",
    "mongodb",
    "watcher",
    "live",
    "oplog"
  ],
  "license": "MIT",
  "dependencies": {
    "debug": "0.7.x",
    "mongodb": "~1.3.x",
    "wildcard": "~0.1.4"
  },
  "devDependencies": {
    "expect.js": "*",
    "mocha": "*",
    "mongoose": "3.6.20",
    "pre-commit": "0.0.9"
  },
  "readme": "# Mongo Oplog\n\n[![NPM version](https://badge.fury.io/js/mongo-oplog.png)](http://badge.fury.io/js/mongo-oplog)\n\nListening to MongoDB live changes using oplog.\n\n## Installation\n\n``` bash\n$ npm install mongo-oplog\n```\n\n## Usage\n\n``` javascript\nvar MongoOplog = require('mongo-oplog');\nvar oplog = MongoOplog('mongodb://127.0.0.1:27017/local', 'test.posts').tail();\n\noplog.on('op', function (data) {\n  console.log(data);\n});\n\noplog.on('insert', function (doc) {\n  console.log(doc.op);\n});\n\noplog.on('update', function (doc) {\n  console.log(doc.op);\n});\n\noplog.on('delete', function (doc) {\n  console.log(doc.op._id);\n});\n\noplog.on('error', function (error) {\n  console.log(error);\n});\n\noplog.on('end', function () {\n  console.log('Stream ended');\n});\n\noplog.stop(function () {\n  console.log('server stopped');\n});\n```\n\n## API\n\n### MongoOplog(uri, [[ns], [options]])\n\n* `uri`: Valid MongoDB uri or a MongoDB server instance.\n* `ns`: Namespace for emitting, namespace format is `database` + `.` + `collection` eg.(`test.posts`).\n* `options` MongoDB onnection options.\n\n### tail([fn])\n\nStart tailing.\n\n```javascript\noplog.tail(function(){\n  console.log('tailing started');\n})\n```\n\n### stop([fn])\n\nStop tailing and disconnect from server.\n\n```javascript\noplog.stop(function(){\n  console.log('tailing stopped');\n})\n```\n\n### filter([ns])\n\nFilter by namespace.\n\n```javascript\noplog.filter('*.posts')\noplog.tail();\n```\n\n### filter.ns(ns)\n\nFilter by namespace.\n\n```javascript\noplog.filter()\n.ns('*.posts')\n.on('op', function(doc){\n  console.log(doc);\n});\n\n// or\noplog.filter()\n.ns('test.*')\n.on('op', function(doc){\n  console.log(doc);\n});\n\n// or\noplog.filter()\n.ns('test.posts');\n.on('op', function(doc){\n  console.log(doc);\n});\n\n// start tailing\noplog.tail();\n```\n\n### events\n\nEvents supported by `oplog` and `filter`;\n\n* `op`: All bellow operations (oplog/filter).\n* `insert`: Document insert (oplog/filter).\n* `update`: Document update (oplog/filter).\n* `delete`: Document delete (oplog/filter).\n* `end`: Cursor stream ended (oplog).\n* `error`: Error (oplog).\n\n## Run tests\n\nConfigure MongoDB for ac active oplog:\n\nStart MongoDB with:\n\n``` bash\n$ mongod --replSet test\n```\n\nStart a `mongo` shell and configure mongo as follows:\n\n```bash\n> var config = {_id: \"test\", members: [{_id: 0, host: \"127.0.0.1:27017\"}]}\n> rs.initiate(config)\n```\n\nOnce configuration is initiated then you can run the test:\n\n``` bash\n$ npm install\n$ make test\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jonathan Brumley &lt;cayasso@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cayasso/mongo-oplog/issues"
  },
  "_id": "mongo-oplog@0.1.6",
  "dist": {
    "shasum": "8402bf1a668004f52a363963d6ba95dae54ecd7f"
  },
  "_from": "mongo-oplog@",
  "_resolved": "https://registry.npmjs.org/mongo-oplog/-/mongo-oplog-0.1.6.tgz"
}
