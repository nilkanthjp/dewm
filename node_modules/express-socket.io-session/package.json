{
  "name": "express-socket.io-session",
  "version": "1.2.3",
  "description": "Share a cookie-based express-session middleware with socket.io",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/oskosk/express-socket.io-session"
  },
  "bugs": {
    "url": "https://github.com/oskosk/express-socket.io-session"
  },
  "keywords": [
    "socket.io",
    "express",
    "express-session"
  ],
  "author": {
    "name": "osk",
    "email": "oscar@shovelapps.com",
    "url": "http://shovelapps.com/"
  },
  "license": "MIT",
  "dependencies": {
    "cookie-parser": "~1.3.3",
    "debug": "~2.1.0"
  },
  "readme": "express-socket.io-session\n=========================\n\nShare a cookie-based express-session middleware with socket.io\n\n**exxpress-socket.io-session** works with **express > 4.0.0** and **socket.io > 1.0.0** and won't be backward compatible.\n\n**Please help me notice errors or ask me for improvements [creating an issue](https://github.com/oskosk/express-socket.io-session/issues/new)**.\n\n## Overview\n\nOn every socket connection, you'll have `socket.handshake.session` pointing to\nthe same `req.session` you would expect in any express app handler that uses\nthe `express-session` middleware module.\n\n\n## Installation\n\n```\n$ npm install express-socket.io-session\n```\n## Usage\n\n    var session require(\"express-session\")({\n        secret: \"my-secret\",\n        resave: true,\n        saveUninitialized: true\n    });\n    // Use sessions with express\n    app.use(session);\n    //Share the express' session with socket.io\n    io.use(require(\"express-socket.io-session\")(session));\n\n\n**Sharing session data with a namespaced socket**\n\n    io.of('/namespace').use(sharedsession(session));\n\n\n**Using your own custom [cookie-parser](https://www.npmjs.com/package/cookie-parser) instance**\n    \n    ...\n    var cookieParser = require(\"cookie-parser\");\n    ...\n    io.use(require(\"express-socket.io-session\")(session, cookieParser({/* your params to cookie-parser* /})));\n\n## Example\n\n```\n# Install express, socket.io and express-session \n$ npm install express socket.io express-session \n# Install this module\n$ npm install express-socket.io-session\n```\n\n**index.js**\n\n\n    var app = require('express')(),\n      server  = require(\"http\").createServer(app),\n      io = require(\"socket.io\")(server),\n      session = require(\"express-session\")({\n        secret: \"my-secret\",\n        resave: true,\n        saveUninitialized: true\n      }),\n      sharedsession = require(\"express-socket.io-session\");\n\n\n    // Attach session\n    app.use(session);\n\n    // Share session with io sockets\n\n    io.use(sharedsession(session));\n\n    server.listen(3000);\n\n \n\n\n## API\n\nThis module exports  a **socket.io**'s middleware for using with `io.use()`\nYou get a *shared session* middleware by requiring the module.\n\n**require(\"express-socket.io-session\")( express_session_middleware, [cookieparser_instance] )**\n\n* `express_session_middleware` is **required** and must be an express middleware function created with the  [express-session](https://www.npmjs.org/package/express-session) module that allows cookie-based sessions.\n* `cookieparser_instance` is optional. If you don't provide en instance created by [cookie-parser](https://www.npmjs.org/package/cookie-parser), this module creates one for you with defaults.\n\n## Inspiration\n\n* [socket.io and express 4 sessions](http://stackoverflow.com/questions/23494016/socket-io-and-express-4-sessions)\n* [Socket.io 1.0.5 : How to save session variables?](http://stackoverflow.com/questions/24290699/socket-io-1-0-5-how-to-save-session-variables/24380110#24380110)\n\nAlthough there are a couple of modules that allow to share session objects between express and socket.io,\nI wanted to be able to share the modules without affecting regular `express-session` instantiation.\n\nThese modules do the same work but with different approachs on initialization.\n\n* [session.socket.io](https://www.npmjs.org/package/session.socket.io) \n* [socket.io-session-middleware](https://github.com/peerigon/socket.io-session-middleware) \n\n\n## License \n\nThe MIT License (MIT)\n\nCopyright (c) 2014-2015 osk &lt;oscar@shovelapps.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
  "readmeFilename": "README.md",
  "_id": "express-socket.io-session@1.2.3",
  "dist": {
    "shasum": "1d82fa1bb8b2d9b8641700e2fd7dcd4cbd650a29"
  },
  "_from": "express-socket.io-session@",
  "_resolved": "https://registry.npmjs.org/express-socket.io-session/-/express-socket.io-session-1.2.3.tgz"
}
