// Database
var mongo = require('mongoskin');
var db = mongo.db("mongodb://dewm:27017/dewm", {native_parser:true, safe:true});

var utils = {};

utils.pad = function(n, width, z) {
	z = z || '0';
	n = n + '';
	return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
}

utils.dateFromStack = function(stack) {
	if 		(parseInt(stack.split("_")[4])>0) { var stackDate = parseInt(stack.split("_")[4]); }
	else if (parseInt(stack.split("_")[3])>0) { var stackDate = parseInt(stack.split("_")[3]); }
	else if (parseInt(stack.split("_")[2])>0) { var stackDate = parseInt(stack.split("_")[2]); }
	return stackDate;
}

utils.formatDate = function(dateToFormat) {
	d = Array(5);
	d[0] = dateToFormat;
	var year = utils.pad(d[0].getFullYear(),2).substring(2);
	var month = utils.pad(d[0].getMonth()+1,2);
	var date = utils.pad(d[0].getDate(),2);
	d[1] = year+month+date;
	d[2] = year+"-"+month+"-"+date;
	d[3] = utils.months[d[0].getMonth()]+" "+d[0].getDate()+", "+d[0].getFullYear();
	return(d);
}

utils.createDateObject = function(dateToParse) {
	if (dateToParse.indexOf("-")>0) { dateToParse = dateToParse.split("-"); } 
	else { dateToParse = dateToParse.split(/(?=(?:..)*$)/); }
	return(new Date("20"+dateToParse[0],parseInt(dateToParse[1])-1,dateToParse[2]) );
}

utils.checkMissingIssues = function(existing,dates) {
	var self = this,
		mongoDates = [],
		mongoToAdd = [];
	db.collection('issues').find( { $or: existing }, { "_id":false } ).toArray(function (err, items) {
		for (var i=0; i<items.length; i++) {
			mongoDates.push(items[i]["string"]);
		}
		for (var i=0; i<dates.strings.length; i++) {
			if (mongoDates.indexOf(dates.strings[i])<0) {
				mongoToAdd.push( { 
					"date":dates.dates[i], 
					"string":dates.strings[i], 
					"hyphen":dates.stringsWithHyphens[i], 
					"formatted":dates.stringsFormatted[i]
				} )
			}
		}
		self.addToDatabase("issues",mongoToAdd);
	});
}

utils.addStacks = function(stacks) {
	var self = this,
		returnStacks = [],
		stackNumbers = [];
	for (var i=0; i<stacks.length; i++) {
		var title = stacks[i].articleTitle[0],
			stackDate = self.dateFromStack(stacks[i].folderName[0]),
			doc = { 
			"title":title.split(" by ")[0].replace("”","").replace("“",""), 
			"stack":stacks[i].folderName[0], 
			"issue":stackDate, 
			"author":title.split(" by ")[1], 
			"kicker":stacks[i].kicker[0], 
			"description":stacks[i].description[0],
			"layout":null,
			"reading":{},
			"copyAssignment":{},
			"artAssignment":{},
			"danville":null,
			"tablet":null
		};
		if (stackDate !== undefined ) {
			stackNumbers.push(stacks[i].folderName[0]);
			returnStacks.push(doc);
		}
	}
	self.addToDatabase("stacks",returnStacks);
	return {stacks:returnStacks,files:stackNumbers};
}

utils.addToDatabase = function(database,documents) {
	if (documents.length>0) {
		db.collection(database,function(err,collection) {
			var bulk = collection.initializeUnorderedBulkOp();
			for (var i = 0; i < documents.length; i++) {
				bulk.find({stack:documents[i]}).upsert().update({ $set: documents[i] });
			}
			bulk.execute(function(err,result) {
				if (err) { console.log(err) } 
				else { console.log("Sucessfully inserted "+result.nUpserted+" "+database+" and updated "+result.nModified+" "+database+" in MongoDB.") } 
			});    
	    });	
	}
}

utils.months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

module.exports = utils;