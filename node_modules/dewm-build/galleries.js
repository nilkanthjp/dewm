function transformToGallery(stackName,xmlName,rootDirectory) {
	if (stackName.indexOf("goat") > 0 && stackName.indexOf("opener") == -1 && stackName.indexOf("menu") == -1 && stackName.indexOf("fooddrink") == -1) {
		for (var z=0; z<window.condenetDirectoryFiles.length; z++) {
			if (window.condenetDirectoryFiles[z].indexOf(theDate+"goli_GOAT_"+xmlName.split("_")[2]) == 0) {
				var xmlName = window.condenetDirectoryFiles[z].split(".")[0];
			}
		}
	} else if (stackName.indexOf("fooddrink") > 0) {
		for (var d=0; d<window.condenetDirectoryFiles.length; d++) {
			if (window.condenetDirectoryFiles[d].indexOf("tables") > 0) {
				xmlName = window.condenetDirectoryFiles[d].split(".")[0];
			} else if (window.condenetDirectoryFiles[d].indexOf("bartab") > 0) {
				var xmlNameBar = window.condenetDirectoryFiles[d].split(".")[0];
			}
		}
	} else if (stackName.indexOf("7000") == 0) {
		xmlName = theDate+"gofr_GOAT_front";
	}
	
	originalStackName = stackName;
	stackName = stripStackNumber(stackName);

	// Read content of the CondeNet XML file for this stack into a variable "condeNetXMLStr"
	var condeNetXML = window.condenetDirectory.resolvePath(xmlName+".xml");
	var fileStream = new air.FileStream();
	fileStream.open(condeNetXML, air.FileMode.READ);
	var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
	fileStream.close();
	
	// Create a folder in HTMLResources for the HTML file and make sure the file exists
	var source = condeNetXML;
	var targetHTML = rootDirectory.resolvePath("HTMLResources/media/"+stackName+"/"+stackName+"_gallery.html");
	if (originalStackName.indexOf("7000") == 0) {
		if (rootDirectory.nativePath.indexOf("TNYTablet") == -1) {
			var target = rootDirectory.resolvePath(stackName+"_stag/"+stackName+".html");
		} else {
			var target = rootDirectory.resolvePath(stackName+"/"+stackName+".html");
		}
	}
	var targetParent = targetHTML.parent;
	targetParent.createDirectory();
	source.copyTo(targetHTML, true);
	
	if (originalStackName.indexOf("7000") == 0) {
		var fileStream = new air.FileStream();
		fileStream.open(target, air.FileMode.WRITE);
		transformCartoonsStack(stackName,rootDirectory,function(finalHTML) {
			fileStream.writeUTFBytes(finalHTML);
			fileStream.close();
			$("#popup").toggle();
		});
	} else {
		// Create the HTML file--it has the same content every time
		var fileStream = new air.FileStream();
		fileStream.open(targetHTML, air.FileMode.WRITE);
		fileStream.writeUTFBytes(window.galleryTemplate);
		fileStream.close();
	
		// Create a folder in HTMLResources for the file and make sure the file exists
		var source = condeNetXML;
		var targetJS = rootDirectory.resolvePath("HTMLResources/media/"+stackName+"/gallery-data.js");
		source.copyTo(targetJS, true);
	
		// Create the JSON file with the image data
		var fileStreamJS = new air.FileStream();
		fileStreamJS.open(targetJS, air.FileMode.WRITE);
		var galleryJS = transformTextToJS(condeNetXMLStr,originalStackName,rootDirectory);

		for (var i=0; i<window.galleryImages.length; i++) {
			window.galleryImages[i].onload = function() {
				galleryJS = galleryJS.replace("<!--insert height here-->",this.height);
				galleryJS = galleryJS.replace("<!--insert width here-->",this.width);
				fileStreamJS.writeUTFBytes(galleryJS);
				fileStreamJS.close();
				$("#popup").toggle();
				refreshStatus();
			}
		}
	}
	
}

// This is the main function to make the stack's gallery.
function transformTextToJS(condeNetXMLStr,stackName,rootDirectory) {
	// Use built-in javascript parser to format the CondeNetXML
	var parser = new DOMParser();
	var XML = parser.parseFromString(condeNetXMLStr,"text/xml");
	var gallery = new Object();

	// Use getXMLTagInfo function (which can be found under "utility functions" in main.js) to grab various pieces
	gallery.Title = getXMLTagInfo(XML,"title");
	gallery.Rubric = getXMLTagInfo(XML,"subhead");
	gallery.Deck = getXMLTagInfo(XML,"summary");
	gallery.Author = getXMLTagInfo(XML,"author");
	gallery.Image = getXMLTagInfo(XML,"image");
	gallery.Gutter = getXMLTagInfo(XML,"guttercredit");
	gallery.Caption = getXMLTagInfo(XML,"caption");
	gallery.Credit = getXMLTagInfo(XML,"credit");
	gallery.CreditType = getXMLTagInfo(XML,"imagetype");
	gallery.Filename = getXMLTagInfo(XML,"filename");
	
	if (gallery.Image.length == 0) {
		gallery.Image = "goat-spot-"+gallery.Filename.split("_")[2];
		gallery.Caption = "Illustration by CreditTK.";
	}
	
	// Determine whether the gallery needs more than one image
	var imageNames = new Array();
	imageNames.push(gallery.Image);
	
	var finalGalleryImageToolbox = "";
	window.galleryImages = new Array();
	
	for (var i=0; i<imageNames.length; i++) {
		copyImage(imageNames[i],stackName,"generic",rootDirectory);

		img = new Image();
		img.src = ("file://"+rootDirectory.nativePath+"/HTMLResources/media/"+stripStackNumber(stackName)+"/"+theDate+"_"+gallery.Image+".jpg"); 
		window.galleryImages.push(img);
		
		var caption = gallery.Caption;
		if (gallery.Credit.length > 0 && gallery.Gutter.length > 0) {
			caption = caption+" "+gallery.Credit+"&#160;/&#160;"+gallery.Gutter;
			// add non-breaking space surrounding / in credits
			caption = caption.replace("/","&#160;/&#160;")
		} else if (gallery.Credit.length > 0) {
			caption = caption+" "+gallery.Credit;
		}
		
    	var currentGalleryImageJSON = window.galleryImageJSON.replace("<!--insert date here-->",theDate);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert r number here-->",gallery.Image);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert caption here-->",caption);
		finalGalleryImageToolbox = finalGalleryImageToolbox+","+currentGalleryImageJSON;	
	}
	
	finalGalleryImageToolbox = 'var slideshowData = {"data":\n\t['+finalGalleryImageToolbox.slice(1)+'\n\t]\n};';
	
	return finalGalleryImageToolbox;
}

function checkSlideshow(xmlName) {
	// Read content of the CondeNet XML file for this stack into a variable "condeNetXMLStr"
	var condeNetXML = window.condenetDirectory.resolvePath(xmlName+".xml");
	var fileStream = new air.FileStream();
	try {
		fileStream.open(condeNetXML, air.FileMode.READ);
		var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
		fileStream.close();
		if (condeNetXMLStr.split(">Slide Show").length > 1) {
			return true;
		} else {
			return false;
		}
	} catch(err) {
		return false;
	}
}

function transformToSlideshow(stackName,xmlName,rootDirectory) {

	originalStackName = stackName;
	stackName = stripStackNumber(stackName);

	// Read content of the CondeNet XML file for this stack into a variable "condeNetXMLStr"
	var condeNetXML = window.condenetDirectory.resolvePath(xmlName+".xml");
	var fileStream = new air.FileStream();
	fileStream.open(condeNetXML, air.FileMode.READ);
	var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
	fileStream.close();
	
	// Create a folder in HTMLResources for the HTML file and make sure the file exists
	var source = condeNetXML;
	var targetHTML = rootDirectory.resolvePath("HTMLResources/media/"+stackName+"/"+stackName+"_slideshow.html");
	var targetParent = targetHTML.parent;
	targetParent.createDirectory();
	source.copyTo(targetHTML, true);
	
	// Create the HTML file--it has the same content every time
	var fileStream = new air.FileStream();
	fileStream.open(targetHTML, air.FileMode.WRITE);
	fileStream.writeUTFBytes(window.slideshowTemplate);
	fileStream.close();
	
	// Create a folder in HTMLResources for the file and make sure the file exists
	var source = condeNetXML;
	var targetJS = rootDirectory.resolvePath("HTMLResources/media/"+stackName+"/slideshow-data.js");
	source.copyTo(targetJS, true);
	
	// Create the JSON file with the image data
	var fileStreamJS = new air.FileStream();
	fileStreamJS.open(targetJS, air.FileMode.WRITE);
	transformTextToSlideshow(condeNetXMLStr,originalStackName,rootDirectory,function(galleryJS) {
		fileStreamJS.writeUTFBytes(galleryJS);
		fileStreamJS.close();
		$("#popup").toggle();
		refreshStatus();
	});
}

// This is the main function to make the stack's gallery.
function transformTextToSlideshow(condeNetXMLStr,stackName,rootDirectory,callback) {
	
	if (condeNetXMLStr.split(">Slide Show<").length > 2) {
		alert("There is more than one slideshow in this piece. Please select the one you'd like to create.");
	}
	
	var refNumber = condeNetXMLStr.split("Slide Show")[1].split("</ref_")[1][0];
	var elements = condeNetXMLStr.split("<ref_"+refNumber+">")[1].split("</ref_"+refNumber+">")[0];

	// Add image names and captions to an array
	var imageNames = new Array();
	var imageCaptions = new Array();
	for (var i=1; i<elements.split("<slideshowimage>").length; i++) {
		imageNames.push(elements.split("<slideshowimage>")[i].split("</slideshowimage>")[0]);
		imageCaptions.push(elements.split("<slideshowcaption>")[i].split("</slideshowcaption>")[0]);
		copyImage(elements.split("<slideshowimage>")[i].split("</slideshowimage>")[0],stackName,"generic",rootDirectory);
	}	
	window.finalGalleryImageToolbox = "";
	getImageSizes(imageNames,imageCaptions,0,imageNames.length-1,stackName,rootDirectory);
	setTimeout(function(){ callback(window.finalGalleryImageToolbox); },imageNames.length*400);
	
}

function getImageSizes(imageNames,imageCaptions,start,stop,stackName,rootDirectory) {
	img = new Image();
	img.src = ("file://"+rootDirectory.nativePath+"/HTMLResources/media/"+stripStackNumber(stackName)+"/"+theDate+"_"+imageNames[start]+".jpg"); 
	img.onload = function() {
		var caption = imageCaptions[start].replace(new RegExp("‚Äú", 'g'), "“").replace(new RegExp("‚Äù", 'g'), "”").replace(new RegExp("‚Äì", 'g'), "–");
		var currentGalleryImageJSON = window.galleryImageJSON.replace("<!--insert date here-->",theDate);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert r number here-->",imageNames[start]);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert width here-->",this.width);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert height here-->",this.height);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert caption here-->",caption);
		window.finalGalleryImageToolbox = window.finalGalleryImageToolbox+","+currentGalleryImageJSON;
		if (start != stop) {
			start++;
			getImageSizes(imageNames,imageCaptions,start,stop,stackName,rootDirectory);
		} else {
			window.finalGalleryImageToolbox = 'var slideshowData = {"data":\n\t['+window.finalGalleryImageToolbox.slice(1)+'\n\t]\n};';
		}
	};
}

// Gallery and Slideshow boilerplate
window.galleryTemplate = '<!DOCTYPE html>\n<html lang="en" class="scroll">\n<head>\n<title></title>\n<meta charset="utf-8" />\n<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>\n<meta name="misapplication-tap-highlight" content="no"/>\n<link rel="stylesheet" href="../../production/css/tny_styles.css" type="text/css" />\n<script src="gallery-data.js"></script>\n<script src="../../production/js/plugins/tnySlideshow.min.js"></script>\n</head>\n<body>\n<div id="slideshow-wrapper">\n<ul id="feed"></ul>\n<div id="caption"><div class="tny-audio"><div class="audio-button"><span class="icon"></span></div></div><p></p></div>\n</div>\n\n<footer id="slideshow-footer">\n<a id="captionToggle" data-state="open">hide caption</a>\n\n<nav>\n<span id="prev">&lt;</span><span id="num"></span><span id="next">&gt;</span> \n</nav>\n\n</footer>\n</body>\n</html>';
window.slideshowTemplate = '<!DOCTYPE html>\n<html lang="en" class="scroll">\n<head>\n<title></title>\n<meta charset="utf-8" />\n<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>\n<meta name="misapplication-tap-highlight" content="no"/>\n<link rel="stylesheet" href="../../production/css/tny_styles.css" type="text/css" />\n<script src="slideshow-data.js"></script>\n<script src="../../production/js/plugins/tnySlideshow.min.js"></script>\n</head>\n<body>\n<div id="slideshow-wrapper">\n<ul id="feed"></ul>\n<div id="caption"><div class=tny-audio"><div class="audio-button"><span class="icon"></span></div></div><p></p></div>\n</div>\n\n<footer id="slideshow-footer">\n<a id="captionToggle" data-state="open">hide caption</a>\n\n<nav>\n<span id="prev">&lt;</span><span id="num"></span><span id="next">&gt;</span> \n</nav>\n\n</footer>\n</body>\n</html>';
window.galleryImageJSON = '\n\t\t{"src":"./<!--insert date here-->_<!--insert r number here-->.jpg", "width":"<!--insert width here-->", "height": "<!--insert height here-->", "caption":"<!--insert caption here-->"}';
window.cartoonStackTemplate = '<!DOCTYPE html>\n<html>\n<head>  \n\t<title></title>\t\n\t<meta charset="utf-8" />\t\n\t<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/> \n\t<meta name="misapplication-tap-highlight" content="no"/>\n\t<link rel="stylesheet" href="../HTMLResources/production/css/tny_styles.css" type="text/css" />\n\t<script>\n\t window.tnyToolbox = {\n\t\t"showOnLoad" : true,\n\t\t"mini" : true,\n\t\t"social" : [\n\t\t  {"name":"facebook", "link":"<!--insert facebook here-->"},\n\t\t  {"name":"twitter", "link":"<!--insert twitter here-->"},\n\t\t  {"name":"email", "link":"<!--insert email here-->"}\n\t\t]\n\t  };\n\t</script>\n\t<script src="../HTMLResources/production/js/app.min.js"></script>\n<!--<style>\n\t@media only screen and (orientation: landscape) and (min-width: 700px){\n\t\t#cartoon-stack img { width: auto; }\n\t}\n</style>-->\n<!-- adjust styling above if necessary -->\n</head>\n<bodt>\n\t<div id="page-wrapper" class="overthrow">\n\t<div id="stack-content" class="cartoon-stack">\n\t\t<h1>Cartoon Gallery</h1>\n\t\t<div class="cartoon-container">\n\t\t\t<a href="../HTMLResources/cartoon-carousel/cartoon-carousel.html">\n\t\t\t\t<div class="cartoon-wrap">\n\t\t\t\t\t<img src="./HTMLResources/media/cartoons/<!--insert date here-->_<!--insert image here-->.jpg" />\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<p><!--insert caption here--></p>\n\t\t\t\t<span class="violator"></span>\n\t\t\t</a>\n\t\t</div>\n\t</div>\n</div>\n</body>\n</html>';