function transformToGallery(stackName,xmlName,rootDirectory) {
	if (stackName.indexOf("goat") > 0 && stackName.indexOf("opener") == -1 && stackName.indexOf("menu") == -1 && stackName.indexOf("fooddrink") == -1) {
		for (var z=0; z<window.condenetDirectoryFiles.length; z++) {
			if (window.condenetDirectoryFiles[z].indexOf(theDate+"goli_GOAT_"+xmlName.split("_")[2]) == 0) {
				var xmlName = window.condenetDirectoryFiles[z].split(".")[0];
			}
		}
	} else if (stackName.indexOf("7000") == 0) {
		xmlName = theDate+"gofr_GOAT_front";
	}
	
	originalStackName = stackName;
	stackName = stripStackNumber(stackName);

	// Read content of the CondeNet XML file for this stack into a variable "condeNetXMLStr"
	var condeNetXML = window.condenetDirectory.resolvePath(xmlName+".xml");
	var fileStream = new air.FileStream();
	fileStream.open(condeNetXML, air.FileMode.READ);
	var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
	fileStream.close();
	
	if (originalStackName.indexOf("7000") == 0) {
		var fileStream = new air.FileStream();
		fileStream.open(target, air.FileMode.WRITE);
		transformCartoonsStack(stackName,rootDirectory,function(finalHTML) {
			fileStream.writeUTFBytes(finalHTML);
			fileStream.close();
			$("#popup").toggle();
		});
	} else {
	
		// Create the JSON file with the image data
		var fileStreamJS = new air.FileStream();
		fileStreamJS.open(targetJS, air.FileMode.WRITE);
		var galleryJS = transformTextToJS(condeNetXMLStr,originalStackName,rootDirectory);

		for (var i=0, j=0, len=window.allImages.length; i<len; i++) {
			window.allImages[i].onload = function() {
				galleryJS = galleryJS.replace("<!--insert height "+this.slug+" here-->",this.height);
				galleryJS = galleryJS.replace("<!--insert width "+this.slug+" here-->",this.width);
			};
			window.allImages[len-1].onload = function() {
				galleryJS = galleryJS.replace("<!--insert height "+this.slug+" here-->",this.height);
				galleryJS = galleryJS.replace("<!--insert width "+this.slug+" here-->",this.width);
				fileStreamJS.writeUTFBytes(galleryJS);
				fileStreamJS.close();
				$("#popup").toggle();
				refreshStatus();
			};
		}		
	}
	
}

// This is the main function to make the stack's gallery.
function transformTextToJS(condeNetXMLStr,stackName,rootDirectory) {
	// Use built-in javascript parser to format the CondeNetXML
	var parser = new DOMParser(),
		elementsXMLStr = condeNetXMLStr.slice(condeNetXMLStr.indexOf("<articleelements>")+18,condeNetXMLStr.indexOf("</articleelements>")),
		XML = parser.parseFromString(condeNetXMLStr,"text/xml"),
		elementsXML = elementsXMLStr.split("<element>"),
		gallery = new Object();

	// Use getXMLTagInfo function (which can be found under "utility functions" in main.js) to grab various pieces
	gallery.Title = getXMLTagInfo(XML,"title");
	gallery.Rubric = getXMLTagInfo(XML,"subhead");
	gallery.Deck = getXMLTagInfo(XML,"summary");
	gallery.Author = getXMLTagInfo(XML,"author");
	gallery.Image = getXMLTagInfo(XML,"image");
	// gallery.Gutter = getXMLTagInfo(XML,"guttercredit");
	// gallery.Caption = getXMLTagInfo(XML,"caption");
	gallery.Caption = condeNetXMLStr.slice(condeNetXMLStr.indexOf("<caption>")+9, condeNetXMLStr.indexOf("</caption>"))
	// gallery.Credit = getXMLTagInfo(XML,"credit");
	gallery.Credit = condeNetXMLStr.slice(condeNetXMLStr.indexOf("<credit>")+8, condeNetXMLStr.indexOf("</credit>"))
	gallery.CreditType = getXMLTagInfo(XML,"imagetype");
	gallery.Filename = getXMLTagInfo(XML,"filename");
	
	if (gallery.Image.length == 0) {
		gallery.Image = "goat-spot-"+gallery.Filename.split("_")[2];
		gallery.Credit = "Illustration by CreditTK";
	}
	
	// Determine whether the gallery needs more than one image
	var galleryImages = [],
		primaryImage = {
			"imageName": gallery.Image,
			"caption": gallery.Caption,
			"credit": gallery.Credit
		};
	
	galleryImages.push(primaryImage);

	for (var i=0, len=elementsXML.length; i<len; i++) {
		var imageType = elementsXML[i].slice(elementsXML[i].indexOf("<type>")+6, elementsXML[i].indexOf("</type>")),
			thisImage = {
				"imageName": elementsXML[i].slice(elementsXML[i].indexOf("<imagename>")+11, elementsXML[i].indexOf("</imagename>")),
				"caption": elementsXML[i].slice(elementsXML[i].indexOf("<elementcaption>")+16, elementsXML[i].indexOf("</elementcaption>")),
				"credit": elementsXML[i].slice(elementsXML[i].indexOf("<credit>")+8, elementsXML[i].indexOf("</credit>"))
			};


		if (imageType === "element_art") {
			galleryImages.push(thisImage);
		}
	}

	
	var finalGalleryImageToolbox = "";
	window.allImages = [];
	
	for (var i=0, len=galleryImages.length; i<len; i++) {
		copyImage(galleryImages[i].imageName,stackName,"generic",rootDirectory);
    	var currentGalleryImageJSON = window.galleryImageJSON.replace("<!--insert date here-->",theDate);

		img = new Image();
		img.src = ("file://"+rootDirectory.nativePath+"/HTMLResources/media/"+stripStackNumber(stackName)+"/"+theDate+"_"+galleryImages[i].imageName+".jpg");
		img.slug = galleryImages[i].imageName;

		window.allImages.push(img);

		var caption = galleryImages[i].caption;
		if (galleryImages[i].credit.length > 0) {
			currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert credit here-->",galleryImages[i].credit);
			// caption += '\r<span class="credit">'+galleryImages[i].credit+'</span>';
		}
		
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert r number here-->",galleryImages[i].imageName);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert caption here-->",caption);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert height here-->","<!--insert height "+img.slug+" here-->");
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert width here-->","<!--insert width "+img.slug+" here-->");
		finalGalleryImageToolbox = finalGalleryImageToolbox+","+currentGalleryImageJSON;	
	}
	
	finalGalleryImageToolbox = 'var slideshowData = {"data":\n\t['+finalGalleryImageToolbox.slice(1)+'\n\t]\n};';

	return finalGalleryImageToolbox;
}

function checkSlideshow(xmlName) {
	// Read content of the CondeNet XML file for this stack into a variable "condeNetXMLStr"
	var condeNetXML = window.condenetDirectory.resolvePath(xmlName+".xml");
	var fileStream = new air.FileStream();
	try {
		fileStream.open(condeNetXML, air.FileMode.READ);
		var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
		fileStream.close();
		if (condeNetXMLStr.split(">Slide Show").length > 1) {
			return true;
		} else {
			return false;
		}
	} catch(err) {
		return false;
	}
}

function transformToSlideshow(stackName,xmlName,rootDirectory) {

	originalStackName = stackName;
	stackName = stripStackNumber(stackName);

	// Read content of the CondeNet XML file for this stack into a variable "condeNetXMLStr"
	var condeNetXML = window.condenetDirectory.resolvePath(xmlName+".xml");
	var fileStream = new air.FileStream();
	fileStream.open(condeNetXML, air.FileMode.READ);
	var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
	fileStream.close();
	
	// Create a folder in HTMLResources for the HTML file and make sure the file exists
	var source = condeNetXML;
	var targetHTML = rootDirectory.resolvePath("HTMLResources/media/"+stackName+"/"+stackName+"_slideshow.html");
	var targetParent = targetHTML.parent;
	targetParent.createDirectory();
	source.copyTo(targetHTML, true);
	
	// Create the HTML file--it has the same content every time
	var fileStream = new air.FileStream();
	fileStream.open(targetHTML, air.FileMode.WRITE);
	fileStream.writeUTFBytes(window.slideshowTemplate);
	fileStream.close();
	
	// Create a folder in HTMLResources for the file and make sure the file exists
	var source = condeNetXML;
	var targetJS = rootDirectory.resolvePath("HTMLResources/media/"+stackName+"/slideshow-data.js");
	source.copyTo(targetJS, true);
	
	// Create the JSON file with the image data
	var fileStreamJS = new air.FileStream();
	fileStreamJS.open(targetJS, air.FileMode.WRITE);
	transformTextToSlideshow(condeNetXMLStr,originalStackName,rootDirectory,function(galleryJS) {
		fileStreamJS.writeUTFBytes(galleryJS);
		fileStreamJS.close();
		$("#popup").toggle();
		refreshStatus();
	});
}

// This is the main function to make the stack's gallery.
function transformTextToSlideshow(condeNetXMLStr,stackName,rootDirectory,callback) {
	
	if (condeNetXMLStr.split(">Slide Show<").length > 2) {
		alert("There is more than one slideshow in this piece. Please select the one you'd like to create.");
	}
	
	var refNumber = condeNetXMLStr.split("Slide Show")[1].split("</ref_")[1][0];
	var elements = condeNetXMLStr.split("<ref_"+refNumber+">")[1].split("</ref_"+refNumber+">")[0];

	// Add image names and captions to an array
	var imageNames = [],
		imageCaptions = [],
		imageCredits = [];
	for (var i=1, len=elements.split("<slideshowimage>").length; i<len; i++) {
		imageNames.push(elements.split("<slideshowimage>")[i].split("</slideshowimage>")[0]);
		imageCaptions.push(elements.split("<slideshowcaption>")[i].split("</slideshowcaption>")[0]);
		imageCredits.push(elements.split("<slideshowcredit>")[i].split("</slideshowcredit>")[0]);
		copyImage(elements.split("<slideshowimage>")[i].split("</slideshowimage>")[0],stackName,"generic",rootDirectory);
	}
	window.finalGalleryImageToolbox = "";
	getImageSizes(imageNames,imageCaptions,imageCredits,0,imageNames.length-1,stackName,rootDirectory);
	setTimeout(function(){ callback(window.finalGalleryImageToolbox); },imageNames.length*400);
	
}

function getImageSizes(imageNames,imageCaptions,imageCredits,start,stop,stackName,rootDirectory) {
	img = new Image();
	img.src = ("file://"+rootDirectory.nativePath+"/HTMLResources/media/"+stripStackNumber(stackName)+"/"+theDate+"_"+imageNames[start]+".jpg"); 
	img.onload = function() {
		var caption = imageCaptions[start].replace(new RegExp("‚Äú", 'g'), "“").replace(new RegExp("‚Äù", 'g'), "”").replace(new RegExp("‚Äì", 'g'), "–"),
			credit = imageCredits[start];
		
		var currentGalleryImageJSON = window.galleryImageJSON.replace("<!--insert date here-->",theDate);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert r number here-->",imageNames[start]);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert width here-->",this.width);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert height here-->",this.height);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert caption here-->",caption);
		currentGalleryImageJSON = currentGalleryImageJSON.replace("<!--insert credit here-->",credit);
		window.finalGalleryImageToolbox = window.finalGalleryImageToolbox+","+currentGalleryImageJSON;
		if (start != stop) {
			start++;
			getImageSizes(imageNames,imageCaptions,imageCredits,start,stop,stackName,rootDirectory);
		} else {
			window.finalGalleryImageToolbox = 'var slideshowData = {"data":\n\t['+window.finalGalleryImageToolbox.slice(1)+'\n\t]\n};';
		}
	};
}
