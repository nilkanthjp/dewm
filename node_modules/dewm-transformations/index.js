function transformDept(theCondeNetXMLText,stackName,template,danville,rootDirectory,callback) {
	if (stackName.indexOf("briefly") > 0) {
		var danvilleHTML = transformBriefly(theCondeNetXMLText,stackName,window.brieflyTemplate,danville,rootDirectory,callback);
	} else {
	
		if (rootDirectory.nativePath.indexOf("TNYTablet") > 0) {
			var popupHTML = '<p>Please select the layout for this piece.</p>\r<select id="layoutSelect"><option>.fiction</option><option>.horizontal-header-first</option><option>.horizontal-header-last</option><option>.vertical-header-first</option><option>.vertical-header-last</option><option>.square-header-first</option><option>.square-header-last</option></select><input type="submit" value="Submit" id="layoutSubmit">';
			$("#popupContent").html(popupHTML);
		} else {
			$("#popupContent").html($("#popupContent").html()+'<div id="layoutSubmit"></div>');
		}
		
		$("#layoutSubmit").click(function() {
			if (rootDirectory.nativePath.indexOf("TNYTablet") > 0) {
				var layout = $("#popupContent #layoutSelect").val();			
			} else {
				var layout = ".horizontal-header-first";
			}
			
			var danvilleTouts = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<tabletmultimediaextras>")+25,theCondeNetXMLText.indexOf("</tabletmultimediaextras>"));
			danvilleTouts = generateToutsObject(danvilleTouts,stackName);

			var danvilleElements = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<articleelements>")+18,theCondeNetXMLText.indexOf("</articleelements>"));
			danvilleElements = generateElementsObject(danvilleElements,danville.Image,stackName,rootDirectory);

			// Get the piece's content and edit the tags
			var danvilleHTML = transformContent(theCondeNetXMLText,stackName);

			// Construct the piece's toolbox, beginning with the Share URLs
			var danvilleToolbox = window.toolboxTemplate.replace("<!--insert facebook here-->",danville.Facebook);
			danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",danville.Twitter);
			danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",danville.Email);
			danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",danville.Bitly);
			danvilleToolbox = danvilleToolbox.replace("<!--insert touts here-->",danvilleTouts);
		
			// Copy the art to the HTMLResources>Media folder
			var layoutStatus = copyImage(danville.Image,stackName,"all",rootDirectory)		
		
			// Add Critics to the rubric if necessary
			if (stackName.indexOf("crit") > 0) {
				danville.Rubric = '<span class="grey">The Critics&nbsp;</span>&nbsp;'+danville.Rubric;
			}
		
			// Sprinkle elements into the HTML
			var numberOfElements = danvilleElements.length;
			var characterSpacing = danvilleHTML.length/(numberOfElements+1);
			var danvilleElementsLast = danvilleElements.length-1;
			if ( danvilleElementsLast >= 0) {
				if (danvilleElements[danvilleElementsLast].length == 1) {
					numberOfElements--;
					template = template.replace("<!--insert newsbreak here-->",danvilleElements[danvilleElementsLast][0]);
				}
			}
			for (var i=1; i<numberOfElements+1;i++) {
				var htmlToAdd = "\n"+danvilleElements[i-1]+"\n"
				var currentSlice = danvilleHTML.slice((i-1)*characterSpacing,i*characterSpacing);
				var paragraphCount = danvilleHTML.match(/<\/p>/g);
				if (paragraphCount.length == 0) {
					var indexToInsert = i*characterSpacing;
				} else {
					var indexToInsert = (i-1)*characterSpacing+currentSlice.lastIndexOf("</p>");
				}
				danvilleHTML = danvilleHTML.splice(indexToInsert+4,0,htmlToAdd);
			}

			// Construct HTML for the tablet images
			if (layoutStatus > 0) {
				if (layoutStatus >= 2) {
					var tabletImageHTML = '\n\t\t\t\t\t<img src="../HTMLResources/media/'+stripStackNumber(stackName)+'/'+theDate+'_'+danville.Image+'_tableth.jpg"  class="tablet-h" />\n\t\t\t\t\t<img src="../HTMLResources/media/'+stripStackNumber(stackName)+'/'+theDate+'_'+danville.Image+'_tabletv.jpg"  class="tablet-v" />';
				} else {
					var tabletImageHTML = '\n\t\t\t\t\t<img src="../HTMLResources/media/'+stripStackNumber(stackName)+'/'+theDate+'_'+danville.Image+'.jpg"  class="tablet-h" />\n\t\t\t\t\t<img src="../HTMLResources/media/'+stripStackNumber(stackName)+'/'+theDate+'_'+danville.Image+'.jpg"  class="tablet-v" />';
				}
			} else {
				var tabletImageHTML = '\n\t\t\t\t\t<img src="http://dummyimage.com/600x400/000/fff&text=ART+tk"  class="tablet-h" />\n\t\t\t\t\t<img src="http://dummyimage.com/600x400/000/fff&text=ART+tk"  class="tablet-v" />';
			}

			// Construct Danville HTML, using the variables just defined
			danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
			danvilleHTML = danvilleHTML.replace("<!--insert header html here-->",window.layoutHTMLTemplates[layout]);
			danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert title here-->", 'g'), danville.Title);
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert deck here-->", 'g'), danville.Deck);
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), danville.Author);
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert stackname here-->", 'g'), stripStackNumber(stackName));
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), danville.Image);
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert image html here-->", 'g'), tabletImageHTML);
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert gallery link here-->", 'g'), "media/"+stripStackNumber(stackName)+"/"+stripStackNumber(stackName)+"_gallery.html");

			// Special case for fiction, where the top rubric needs to include author's name
			if (stackName.indexOf("fiction") > 0 && rootDirectory.nativePath.indexOf("TNYTablet") > 0) {
				danvilleHTML = danvilleHTML.replace(new RegExp("<h2><!--insert rubric here--></h2>", 'g'), '<h2 class="two-lines"><span class="grey">Fiction&nbsp;</span>&nbsp;By '+danville.Author+"</h2>");
			} else {
				danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert rubric here-->", 'g'), danville.Rubric);
			}

			if (rootDirectory.nativePath.indexOf("TNYTablet") == -1) {
				danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert caption here-->", 'g'), '<br><br><br><p class="caption" style="font-family:CaslonPro; font-size:1.25em; font-style:italic">'+danville.Caption+'</p><br><br><br>');	
			}
			
			// Output final HTML for the Digital Danville
			callback(danvilleHTML);
		
		});
		
		if (rootDirectory.nativePath.indexOf("TNYTablet") == -1) {
			$("#layoutSubmit").click();
		}
	
	}	
	
}

function transformShouts(theCondeNetXMLText,stackName,template,danville,rootDirectory) {
	
	var danvilleTouts = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<tabletmultimediaextras>")+25,theCondeNetXMLText.indexOf("</tabletmultimediaextras>"));
	danvilleTouts = generateToutsObject(danvilleTouts,stackName);

	var danvilleElements = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<articleelements>")+18,theCondeNetXMLText.indexOf("</articleelements>"));
	danvilleElements = generateElementsObject(danvilleElements,danville.Image,stackName,rootDirectory);

	// Get the piece's content and edit the tags
	var danvilleHTML = transformContent(theCondeNetXMLText,stackName);

	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.toolboxTemplate.replace("<!--insert facebook here-->",danville.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",danville.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",danville.Email);
	danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",danville.Bitly);
	danvilleToolbox = danvilleToolbox.replace("<!--insert touts here-->",'{"type":"weblink", "text":"Daily Shouts: New humor, five days a week.", "src":"http://www.newyorker.com/online/blogs/shouts/"},\n\t\t{"type":"weblink", "text":"The Borowitz Report: The news, reshuffled.", "src":"http://www.newyorker.com/online/blogs/borowitzreport"}');
		
	// Copy the art to the HTMLResources>Media folder
	var layoutStatus = copyImage(danville.Image,stackName,"all",rootDirectory)
		
	// Construct Danville HTML, using the variables just defined
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert title here-->", 'g'), danville.Title);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert rubric here-->", 'g'), danville.Rubric);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert deck here-->", 'g'), danville.Deck);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), danville.Author);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert stackname here-->", 'g'), stripStackNumber(stackName));
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), danville.Image);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert gallery link here-->", 'g'), "media/"+stripStackNumber(stackName)+"/"+stripStackNumber(stackName)+"_gallery.html");
	
	if (rootDirectory.nativePath.indexOf("TNYTablet") == -1) {
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert caption here-->", 'g'), '<br><br><br><p class="caption" style="font-family:CaslonPro; font-size:1.25em; font-style:italic">'+danville.Caption+'</p><br><br><br>');	
	}
	
	// Output final HTML for the Digital Danville
	return danvilleHTML;
	
}

function transformContribs(theCondeNetXMLText,stackName,template,danville,rootDirectory) {
	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.toolboxTemplate.replace("<!--insert facebook here-->",danville.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",danville.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",danville.Email);
	danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",danville.Bitly);
	
	// Get the piece's content and edit the tags
	var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));
	danvilleHTML = danvilleHTML.replace(new RegExp("</bold", 'g'), "</h2");
	danvilleHTML = danvilleHTML.replace(new RegExp("<bold", 'g'), "<h2");
	danvilleHTML = danvilleHTML.replace(new RegExp("</paragraph", 'g'), "</li");
	danvilleHTML = danvilleHTML.replace(new RegExp("<paragraph", 'g'), "<li");
	danvilleHTML = danvilleHTML.replace(new RegExp(/\(/g), '<h3><a href="navto://">(');
	danvilleHTML = danvilleHTML.replace(new RegExp(/\)/g), ')</a></h3>');
	danvilleHTML = danvilleHTML.replace(new RegExp('italic>', 'gm'), "em>");
	
	// Construct Danville HTML, using the variables just defined
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
	return danvilleHTML;
}

function transformMail(theCondeNetXMLText,stackName,template,danville,rootDirectory) {
	// Get the piece's content and edit the tags
	var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));
	danvilleHTML = danvilleHTML.replace(new RegExp("<paragraph><bold>", 'g'), "<article>\r<h3>");
	danvilleHTML = danvilleHTML.replace(new RegExp("</bold></paragraph>", 'g'), "</h3>");
	danvilleHTML = danvilleHTML.replace(new RegExp('<paragraph class="noindent"><italic>', 'g'), "<span>");
	danvilleHTML = danvilleHTML.replace(new RegExp("</italic></paragraph>", 'g'), "<br />");
	danvilleHTML = danvilleHTML.replace(new RegExp("<paragraph>&#160;</paragraph>", 'g'), "</span>\r</article>\r\r<article>");
	danvilleHTML = danvilleHTML.replace(new RegExp("<paragraph>", 'g'), "<p>");
	danvilleHTML = danvilleHTML.replace(new RegExp("</paragraph>", 'g'), "</p>");
	danvilleHTML = danvilleHTML.replace(new RegExp("</p>\r\r<p>", 'g'), "</p>\r<p>");
	danvilleHTML = danvilleHTML.replace(/<br \/>\r<span>/gm, "<br />\r");
	danvilleHTML = danvilleHTML.replace(new RegExp('<br />/\r</span>', 'gm'), "\r</span>");
	danvilleHTML = danvilleHTML.replace(new RegExp('<br />\r<p>', 'gm'), "<br /><br /></span>\r<p>");
	danvilleHTML = danvilleHTML.replace(new RegExp('</article>\r\r<p>', 'gm'), "<br /><p>");
	danvilleHTML = danvilleHTML.replace(new RegExp('italic>', 'gm'), "em>");
	
	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.toolboxTemplate.replace("<!--insert facebook here-->",danville.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",danville.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",danville.Email);
	danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",danville.Bitly);
	danvilleToolbox = danvilleToolbox.replace(new RegExp('false', 'g'), "true");
	
	// Construct Danville HTML, using the variables just defined
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML+"\n</span>\n</article>");
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert toolbox here-->", 'g'), danvilleToolbox);
	return danvilleHTML;
}

function transformTalk(theCondeNetXMLText,stackName,template,danville,rootDirectory) {
	if (stackName.indexOf("1400") == 0) {
		var danvilleHTML = transformTalkOpener(theCondeNetXMLText,stackName,window.talkOpenerTemplate,danville,rootDirectory)
	} else {
		var danvilleTouts = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<tabletmultimediaextras>")+25,theCondeNetXMLText.indexOf("</tabletmultimediaextras>"));
		danvilleTouts = generateToutsObject(danvilleTouts,stackName);
	
		var danvilleElements = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<articleelements>")+18,theCondeNetXMLText.indexOf("</articleelements>"));
		danvilleElements = generateElementsObject(danvilleElements,danville.Image,stackName,rootDirectory);
		
		// Get the piece's content and edit the tags
		var danvilleHTML = transformContent(theCondeNetXMLText,stackName);
	
		// Construct the piece's toolbox, beginning with the Share URLs
		var danvilleToolbox = window.toolboxTemplate.replace("<!--insert facebook here-->",danville.Facebook);
		danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",danville.Twitter);
		danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",danville.Email);
		danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",danville.Bitly);
		if (stackName.indexOf("comm") > 0) {
			danvilleToolbox = danvilleToolbox.replace("<!--insert touts here-->",'{"type":"weblink", "text":"Daily Comment: Opinions, arguments, and reflections on the news.", "src":"http://www.newyorker.com/online/blogs/comment/"}');
		}
		
		// If this is talk, some modifications need to be made to select the right art and change the HTML a bit
		if (danville.Image.length == 0) {
			danville.Image = danville.Spot;
			danville.Credit = danville.Credit;
		} else if (stackName.indexOf("surowiecki") > 0) {
			// danville.Credit = "Illustration by "+danville.Credit+".";
			danville.Credit = ""; // Surowiecki credit should appear only in gallery
		} else {
			danville.Credit = "Illustration by Tom Bachtell.";
		}
		copyImage(danville.Image,stackName,"generic",rootDirectory)
		
		// Construct Danville HTML, using the variables just defined
		danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
		danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert title here-->", 'g'), danville.Title);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert rubric here-->", 'g'), danville.Rubric);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert deck here-->", 'g'), danville.Deck);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), danville.Author);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert credit here-->", 'g'), danville.Credit);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert stackname here-->", 'g'), stripStackNumber(stackName));
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert header class here-->", 'g'), "horizontal-no-bleed");
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), danville.Image);
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert caption here-->", 'g'), "<figcaption>"+danville.Caption+"</figcaption>");
		
		// Special call to remove the ending dingbat.
		danvilleHTML = danvilleHTML.replace(new RegExp("&#160;<smallcaps>&#9830;</smallcaps>", 'g'), "");

		if (danvilleElements.length > 0) {
			danvilleElements[0] = danvilleElements[0].replace("<!--insert date here-->", theDate);
			danvilleHTML =  danvilleHTML.replace("<!--insert cartoon here-->", danvilleElements[0]);
		}
		
		if (stackName.indexOf("surowiecki") > 0) {
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert suro gallery here-->", 'g'),'<div><a href="../HTMLResources/media/talk_surowiecki_'+theDate+'/talk_surowiecki_'+theDate+'_gallery.html" class="icon-plus red"></a></div>');
		}
	}
	
	// Output final HTML for the Digital Danville
	return danvilleHTML;
}

function transformTalkOpener(theCondeNetXMLText,stackName,template,danville,rootDirectory) {
	var talkStories = new Array()
	for (var d=0; d<window.stackNames.length; d++) {
		if (window.stackNames[d].indexOf("talk") > 0 && window.stackNames[d].indexOf("1400") < 0) {
			talkStories.push(window.xmlNames[d]);
		}
	}
	var talkStoriesHTML = generateTalkStoriesHTML(talkStories);
		
	var danvilleHTML = transformContent(theCondeNetXMLText,stackName);
	danvilleHTML = danvilleHTML.split(" ",25).join(" ").replace(' class="descender"',"")+"...</p>";

	// Construct Danville HTML, using the variables just defined		
	danvilleHTML = template.replace("<!--insert blurb here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert title here-->", 'g'), danville.Title);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), danville.Author);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert stackname here-->", 'g'), stripStackNumber(stackName));
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), danville.Image);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert talk here-->", 'g'), talkStoriesHTML);

	// Output final HTML for the Digital Danville
	return danvilleHTML;
}

function transformPoem(theCondeNetXMLText,stackName,template,danville,rootDirectory) {
	
	var danvilleTouts = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<tabletmultimediaextras>")+25,theCondeNetXMLText.indexOf("</tabletmultimediaextras>"));
	var danvillePoemAudio = generatePoemAudioToolbox(danvilleTouts);	
	danvilleTouts = generateToutsObject(danvilleTouts,stackName);

	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.toolboxTemplate.replace("<!--insert facebook here-->",danville.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",danville.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",danville.Email);
	//danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",danville.Bitly);
	danvilleToolbox = danvilleToolbox.replace('"showOnLoad" : false','"showOnLoad" : true');
	danvilleToolbox = danvilleToolbox.replace('"mini" : false','"mini" : true');

	// Get the piece's content and edit the tags
	var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));
	danvilleHTML = danvilleHTML.replace(new RegExp("paragraph>", 'g'), "span>");
	danvilleHTML = danvilleHTML.replace(new RegExp("<span>&#160;</span>", 'g'), "</p>\n<p>");
	danvilleHTML = danvilleHTML.replace(new RegExp("italic>", 'g'), "em>");
	danvilleHTML = danvilleHTML.replace(new RegExp('<span><center>', 'g'), '<p class="translation">');
	danvilleHTML = danvilleHTML.replace(new RegExp('</center></center>', 'g'), '</p>');
	
	copyImage(danville.Image,stackName,"thumbnail",rootDirectory)
	
	// Construct Danville HTML, using the variables just defined
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
	if (danvilleTouts.length > 1) {
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert poem audio div here-->", 'g'), '<div id="poem-audio"></div>\n\t\t\t');
	}
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert title here-->", 'g'), danville.Title);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), danville.Author);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert rubric here-->", 'g'), danville.Rubric);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert toolbox here-->", 'g'), danvillePoemAudio+"window.tnyToolbox = {"+danvilleToolbox+"\n};");
	return danvilleHTML;
}

function transformBackPage(theCondeNetXMLText,stackName,template,danville,rootDirectory) {

}

function transformCartoons(theCondeNetXMLText,stackName,danville,rootDirectory) {
	danvilleElements = "";
	for (var i=0; i<window.stackNames.length; i++) {
		if (window.stackNames[i].indexOf("_comm_") > -1 || window.stackNames[i].indexOf("_talk_") > -1 || window.stackNames[i].indexOf("_dept_") > -1 || window.stackNames[i].indexOf("_crit_") > -1 || window.stackNames[i].indexOf("_fiction_") > -1) {
			try {
				var condeNetXML = window.condenetDirectory.resolvePath(window.xmlNames[i]+".xml");
				var fileStream = new air.FileStream();
				fileStream.open(condeNetXML, air.FileMode.READ);
				var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
				fileStream.close();
				var danvilleElements = danvilleElements+condeNetXMLStr.slice(condeNetXMLStr.indexOf("<articleelements>")+18,condeNetXMLStr.indexOf("</articleelements>"));
			} catch(err) {}
		}
	}
	var finalImagenames = [];
	var finalImageCaptions = [];
	$(danvilleElements).find("imagename").each(function(index) {
		var imagename = $(this).text().toLowerCase();
		var imagetype = $(danvilleElements).find("type")[index].textContent;
		if (imagetype == "element_cartoon") {
			finalImagenames.push(imagename);
			try {
				finalImageCaptions.push($(danvilleElements).find("elementcaption")[index].textContent);
			} catch(err) {
				finalImageCaptions.push("");
			}
		}
	});
	var finalElementsHTML = "";
	for (var i=0; i<finalImagenames.length; i++) {
		var theCaption = finalImageCaptions[i].replace(new RegExp("”", 'g'), "&#8221;").replace(new RegExp("“", 'g'), "&#8220;").replace(new RegExp("‘", 'g'), "&#8216;").replace(new RegExp("’", 'g'), "&#8217;").replace(new RegExp(';""', 'g'), ';"').replace(new RegExp('\r""', 'g'), '"').replace(new RegExp('"""', 'g'), '""');
		theCaption = theCaption.replace(new RegExp("\n", 'g'), "")
		finalElementsHTML=finalElementsHTML+',\n\t\t{ "order" : "'+i+'", "name":"'+finalImagenames[i]+'", "src" : "../media/cartoons/'+theDate+'_'+finalImagenames[i]+'.jpg", "caption" : "'+theCaption+'"';
		if (finalImagenames[i].indexOf("a1") != 0) {
			finalElementsHTML=finalElementsHTML+', "archive":"'+getArchiveDate(finalImagenames[i])+'"}';
		} else {
			finalElementsHTML=finalElementsHTML+'"}';
		}
	}
	finalElementsHTML = 'var cartoonsData = {"cartoons": [ '+finalElementsHTML.slice(1)+'\n ] }';
	finalElementsHTML = finalElementsHTML.replace(new RegExp('"""', 'g'), '""').replace(new RegExp(';""', 'g'), ';"').replace(new RegExp('; ""', 'g'), ';"');
	finalElementsHTML = finalElementsHTML.replace(new RegExp('"......&#8220;', 'g'), '"\&#8220;');
	finalElementsHTML = finalElementsHTML.replace(new RegExp('&#8221;......""', 'g'), '&#8221;"');
	finalElementsHTML = finalElementsHTML.replace(new RegExp('&#8221;......"', 'g'), '&#8221;"');
	return finalElementsHTML;
}

function transformCartoonsStack(stackName,rootDirectory,callback) {
	danvilleElements = "";
	for (var i=0; i<window.stackNames.length; i++) {
		if (window.stackNames[i].indexOf("_comm_") > -1 || window.stackNames[i].indexOf("_talk_") > -1 || window.stackNames[i].indexOf("_dept_") > -1 || window.stackNames[i].indexOf("_crit_") > -1 || window.stackNames[i].indexOf("_fiction_") > -1) {
			try {
				var condeNetXML = window.condenetDirectory.resolvePath(window.xmlNames[i]+".xml");
				var fileStream = new air.FileStream();
				fileStream.open(condeNetXML, air.FileMode.READ);
				var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
				fileStream.close();
				var danvilleElements = danvilleElements+condeNetXMLStr.slice(condeNetXMLStr.indexOf("<articleelements>")+18,condeNetXMLStr.indexOf("</articleelements>"));
				if (danvilleElements.split("cartoon").length > 1) {
					i = window.stackNames.length;
				}
			} catch(err) {}
		}
	}
	var finalImagenames = [];
	var finalImageCaptions = [];
	$(danvilleElements).find("imagename").each(function(index) {
		var imagename = $(this).text().toLowerCase();
		var imagetype = $(danvilleElements).find("type")[index].textContent;
		if (imagetype == "element_cartoon") {
			finalImagenames.push(imagename);
			try {
				finalImageCaptions.push($(danvilleElements).find("elementcaption")[index].textContent);
			} catch(err) {
				finalImageCaptions.push("");
			}
		}
	});
	
	finalHTML = window.cartoonStackTemplate.replace(new RegExp('<!--insert caption here-->', 'g'), finalImageCaptions[0]);
	finalHTML = finalHTML.replace(new RegExp('<!--insert image here-->', 'g'), finalImagenames[0]);
	finalHTML = finalHTML.replace(new RegExp('<!--insert date here-->', 'g'), theDate);
	//finalHTML = finalHTML.replace("<!--insert facebook here-->",danville.Facebook);
	//finalHTML = finalHTML.replace("<!--insert twitter here-->",danville.Twitter);
	//finalHTML = finalHTML.replace("<!--insert email here-->",danville.Email);
	callback(finalHTML);
}

function transformBriefly(theCondeNetXMLText,stackName,template,danville,rootDirectory,callback) {

	var danvilleTouts = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<tabletmultimediaextras>")+25,theCondeNetXMLText.indexOf("</tabletmultimediaextras>"));
	danvilleTouts = generateToutsObject(danvilleTouts,stackName);
	
	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.toolboxTemplate.replace("<!--insert facebook here-->",danville.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",danville.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",danville.Email);
	danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",danville.Bitly);
	danvilleToolbox = danvilleToolbox.replace("<!--insert touts here-->",danvilleTouts);
	danvilleToolbox = danvilleToolbox.replace('"showOnLoad" : false','"showOnLoad" : true');
	danvilleToolbox = danvilleToolbox.replace('"mini" : false','"mini" : true');

	// Get the piece's content and edit the tags
	var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));

	var imageNamesHTML = theCondeNetXMLText.split('src=');
	var imageNames = new Array();
	for (var i=1; i<imageNamesHTML.length; i++) {
		var imagename = imageNamesHTML[i].split('"')[1].split("/")[imageNamesHTML[i].split('"')[1].split("/").length-1].split("_")[1];
		imageNames.push(imagename);
	}

	danvilleHTML = danvilleHTML.replace(new RegExp('<paragraph class="no-indent"><img', 'g'), "<article><figure><img");
	danvilleHTML = danvilleHTML.replace(new RegExp('</img></paragraph>', 'g'), "</img></figure>");
	danvilleHTML = danvilleHTML.replace(new RegExp('<paragraph><bold>', 'g'), "<div><h2>");
	danvilleHTML = danvilleHTML.replace(new RegExp('</bold><italic>,', 'g'), "</h2><h3>,");
	danvilleHTML = danvilleHTML.replace(new RegExp('</italic>.', 'g'), ".</h3> <p>");
	danvilleHTML = danvilleHTML.replace(new RegExp('</paragraph>', 'g'), "</p></div>\n</article>");
	danvilleHTML = danvilleHTML.replace(new RegExp('<paragraph>&#160;</p></div>\n</article>', 'g'), "");

	for (var i=0; i<imageNames.length; i++) {
		copyImage(imageNames[i],stackName,"generic",rootDirectory)
		if (rootDirectory.nativePath.indexOf("TNYTablet") > 0) {
			danvilleHTML = danvilleHTML.replace(new RegExp('src=\"/.*\"', ''), 'src="../HTMLResources/media/'+stripStackNumber(stackName)+'/'+theDate+"_"+imageNames[i]+'.jpg"');
		} else {
			danvilleHTML = danvilleHTML.replace(new RegExp('src=\"/.*\"', ''), 'src="../HTMLResources/media/'+stripStackNumber(stackName)+'/'+theDate+"_"+imageNames[i]+'.jpg"');
		}	
	}
	
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert toolbox here-->", 'g'), danvilleToolbox);
	
	// Output final HTML for the Digital Danville
	callback(danvilleHTML);
}

// Note that all of these transform functions can be found in stacks.js
function transformTOCToHTML(condeNetXMLStr,stackName,rootDirectory,callback) {

	var tocDepts = "";
	var tocCrits ="";
	var tocCover ="";
	var tocDeptCount = 0;
	for (var i=0; i<window.stackNames.length; i++) {
		if (window.stackNames[i].indexOf("_comm_") > -1 || window.stackNames[i].indexOf("_talk_") > -1 || window.stackNames[i].indexOf("_dept_") > -1 || window.stackNames[i].indexOf("_crit_") > -1 || window.stackNames[i].indexOf("_fiction_") > -1 || window.stackNames[i].indexOf("_shouts_") > -1 || window.stackNames[i].indexOf("_poem_") > -1 || window.stackNames[i].indexOf("_cover_") > -1) {
			try {
				var condeNetXML = window.condenetDirectory.resolvePath(window.xmlNames[i]+".xml");
				var fileStream = new air.FileStream();
				fileStream.open(condeNetXML, air.FileMode.READ);
				var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
				fileStream.close();

				var parser = new DOMParser();
				var XML = parser.parseFromString(condeNetXMLStr,"text/xml");

				var theStackname = getXMLTagInfo(XML,"stackname");
				var theAuthor = getXMLTagInfo(XML,"author");
				var theRubric = getXMLTagInfo(XML,"subhead");
				var theTitle = getXMLTagInfo(XML,"title");
				var theVolume = getXMLTagInfo(XML,"volumenumber");
				var theIssue = getXMLTagInfo(XML,"issuenumber");

				// check for multimedia
				var theMultimedia = condeNetXMLStr.slice(condeNetXMLStr.indexOf("<tabletmultimediaextras>")+25,condeNetXMLStr.indexOf("</tabletmultimediaextras>"));
				var theMultimediaTypes = [theMultimedia.split("<type_1>")[1].split("</type_1>")[0],theMultimedia.split("<type_2>")[1].split("</type_2>")[0],theMultimedia.split("<type_3>")[1].split("</type_3>")[0],theMultimedia.split("<type_4>")[1].split("</type_4>")[0],theMultimedia.split("<type_5>")[1].split("</type_5>")[0]]
				var theToutIcons = "";
				for (var toutCount=0; toutCount<5; toutCount++) {
					if (theMultimediaTypes[toutCount].length>1) {
						theToutIcons = theToutIcons+"\t\t\t\t\t\t<span class='icon-"+theMultimediaTypes[toutCount].toLowerCase().replace(new RegExp(' ', 'g'), "")+" grey'></span>\r";
					}
				}

				// construct html for this entry in the toc
				if (theStackname.indexOf("_dept_") > 0) {
					var currentToc = window.tocDept;
					currentToc = currentToc.replace(new RegExp("<!--insert stackname here-->", 'g'), theStackname);
					currentToc = currentToc.replace(new RegExp("Author TK", 'g'), theAuthor);
					currentToc = currentToc.replace(new RegExp("Rubric TK", 'g'), theTitle);
					currentToc = currentToc.replace(new RegExp("<!--insert multimedia here-->", 'g'), theToutIcons);
					tocDeptCount++
					if (tocDeptCount == 3) {
						tocDepts = tocDepts+"\r<hr>\r"+currentToc;
					} else {
						tocDepts = tocDepts+"\r"+currentToc;
					}
					
				} else if (theStackname.indexOf("_shouts_") > 0) {
					var currentToc = window.tocShouts;
					currentToc = currentToc.replace(new RegExp("<!--insert stackname here-->", 'g'), theStackname);
					currentToc = currentToc.replace(new RegExp("Author TK", 'g'), theAuthor);
					currentToc = currentToc.replace(new RegExp("Rubric TK", 'g'), theTitle);
					currentToc = currentToc.replace(new RegExp("<!--insert multimedia here-->", 'g'), theToutIcons);
					tocDepts = tocDepts+"\r"+currentToc;
				} else if (theStackname.indexOf("_poem_") > 0) {
					var currentToc = window.tocPoem;
					currentToc = currentToc.replace(new RegExp("<!--insert stackname here-->", 'g'), theStackname);
					currentToc = currentToc.replace(new RegExp("Author TK", 'g'), theAuthor);
					currentToc = currentToc.replace(new RegExp("Title TK", 'g'), theTitle);
					currentToc = currentToc.replace(new RegExp("<!--insert multimedia here-->", 'g'), theToutIcons);
					tocDepts = tocDepts+"\r"+currentToc;
				} else if (theStackname.indexOf("_fiction_") > 0) {
					var currentToc = window.tocFiction;
					currentToc = currentToc.replace(new RegExp("<!--insert stackname here-->", 'g'), theStackname);
					currentToc = currentToc.replace(new RegExp("Author TK", 'g'), theAuthor);
					currentToc = currentToc.replace(new RegExp("Title TK", 'g'), theTitle);
					currentToc = currentToc.replace(new RegExp("<!--insert multimedia here-->", 'g'), theToutIcons);
					tocDepts = tocDepts+"\r<hr>\r"+currentToc;
				} else if (theStackname.indexOf("_briefly_") > 0) {
					var currentToc = window.tocBriefly;
					currentToc = currentToc.replace(new RegExp("<!--insert stackname here-->", 'g'), theStackname);
					currentToc = currentToc.replace(new RegExp("Author TK", 'g'), theAuthor);
					currentToc = currentToc.replace(new RegExp("Rubric TK", 'g'), theTitle);
					currentToc = currentToc.replace(new RegExp("<!--insert multimedia here-->", 'g'), theToutIcons);
					tocCrits = tocCrits+"\r"+currentToc;
				} else if (theStackname.indexOf("_crit_") > 0) {
					var currentToc = window.tocDept;
					currentToc = currentToc.replace(new RegExp("<!--insert stackname here-->", 'g'), theStackname);
					currentToc = currentToc.replace(new RegExp("Rubric TK", 'g'), theRubric);
					currentToc = currentToc.replace(new RegExp("Author TK", 'g'), theAuthor);
					currentToc = currentToc.replace(new RegExp("Rubric TK", 'g'), theTitle);
					currentToc = currentToc.replace(new RegExp("<!--insert multimedia here-->", 'g'), theToutIcons);
					tocCrits = tocCrits+"\r"+currentToc;
				} else if (theStackname.indexOf("_cover_") > 0) {
					var currentToc = window.tocCover;
					currentToc = currentToc.replace(new RegExp("<!--insert stackname here-->", 'g'), theStackname);
					currentToc = currentToc.replace(new RegExp("Rubric TK", 'g'), theRubric);
					currentToc = currentToc.replace(new RegExp("Author TK", 'g'), theAuthor);
					currentToc = currentToc.replace(new RegExp("Title TK", 'g'), theTitle);
					currentToc = currentToc.replace(new RegExp("<!--insert multimedia here-->", 'g'), theToutIcons);
					tocCover = currentToc;
				}

			} catch(err) {}
		}
	}
	
	danvilleHTML = window.tocTemplate;
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert formatted date here-->", 'g'), months[month-1]+" "+date+", "+year);
	danvilleHTML = danvilleHTML.replace("<!--insert toc depts here-->", tocDepts);
	danvilleHTML = danvilleHTML.replace("<!--insert toc crits here-->", tocCrits);
	danvilleHTML = danvilleHTML.replace("<!--insert cover here-->", window.tocCover);
	danvilleHTML = danvilleHTML.replace("<!--insert volume number here-->", romanize(theVolume));
	danvilleHTML = danvilleHTML.replace("<!--insert issue number here-->", theIssue);
	
	// Output final HTML for the Digital Danville
	callback(danvilleHTML);
}

// universal templates
window.talkOpenerTalkTemplate = '\t\t\t\t<li>\n\t\t\t\t\t<a href="navto://<!--insert stackname here-->">\n\t\t\t\t\t\t<h4><!--insert rubric here--></h4>\n\t\t\t\t\t\t<h2><!--insert title here--></h2>\n\t\t\t\t\t\t<h3>by <!--insert author here--></h3>\n\t\t\t\t\t</a>\n\t\t\t\t</li>';

// stack templates
window.headTemplate = '<!DOCTYPE html>\n<html>\n<head>  \n\t<title></title> \n\t<meta charset="utf-8" />   \n\t<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/> \n\t<meta name="misapplication-tap-highlight" content="no"/>\n\t<link rel="stylesheet" href="../HTMLResources/production/css/tny_styles.css" type="text/css" />\n\t<script>window.tnyToolbox = {<!--insert toolbox here-->};</script>\n\t<script src="../HTMLResources/production/js/app.min.js"></script>\n\t<!--<style>\n\t\t@media screen and (orientation:portrait) and (min-width: 700px) { \n\t\t\theader #opener {margin-top: 0} \n\t\t\t.styleTK .image-wrapper {max-width: 75%;} \n\t\t}\n\t\t@media screen and (orientation:landscape) and (min-width: 700px) { \n\t\t\t.styleTK .image-wrapper {min-width: 496px;} \n\t\t\t.header-group {width: 100%;}\n\t\t}\n\t</style>-->\n</head>\n';
window.poemTemplate = '<!DOCTYPE html>\n<html>\n<head>  \n\t<title></title> \n\t<meta charset="utf-8" />   \n\t<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/> \n\t<meta name="misapplication-tap-highlight" content="no"/>\n\t<link rel="stylesheet" href="../HTMLResources/production/css/tny_styles.css" type="text/css" />\n\t<script><!--insert toolbox here--></script>\n\t<script src="../HTMLResources/production/js/app.min.js"></script>\n</head>\n<body>\n\t<header id="header" class="persistent">\n\t\t<h2><!--insert rubric here--></h2>\n\t\t<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t\t<div id="stack-content" class="poem">\n\t\t\t<header>\n\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t<h2>by <!--insert author here--></h2><!--insert poem audio div here-->\n\t\t\t</header>\n\t\t\t<div class="align-left">\n\t\t\t\t<p><!--insert content here--></p>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n<!--insert danville script here-->\n\n</body>\n</html>';
window.talkTemplate = window.headTemplate+'<body>\n\t<header id="header" class="persistent">\n\t\t<a href="navto://1400_talk_menu_<!--insert date here-->" class="icon-menu red left"></a>\n\t\t<h2 class="small">The Talk of the Town</h2>\n\t\t<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t\t<div id="stack-content" class="talk">\n\t\t\t<header>\n\t\t\t\t<h2><!--insert rubric here--></h2>\n\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->.jpg" alt="" />\n\t\t\t\t<!--insert caption here-->\n\t\t\t\t<!--insert suro gallery here-->\n\t\t\t</header>\n\t\t\t<div class="content">\n<!--insert content here--><cite>&mdash;<!--insert author here--></cite>\n\n<!--insert cartoon here-->\n\t\t\t</div>\n\t\t\t<footer>\n\t\t\t\t<h6><!--insert credit here--></h6>\n\t\t\t\t<a href="#" class="icon-top red"></a>\n\t\t\t</footer>\n\t\t</div>\n\t</div>\n\n<!--insert danville script here-->\n\n</body>\n</html>';
window.deptTemplate = window.headTemplate+'<body>\n\t<header id="header" class="persistent">\n\t\t<h2><!--insert rubric here--></h2>\n\t\t<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t<div id="stack-content" class="feature">\n\t\t<!--insert header html here-->\n\n\t\t<section>\n<!--insert content here-->\n\t\t<!--insert newsbreak here-->\n\t\t</section>\n\t\t<footer>\n\t\t\t<a href="#" class="icon-top red"></a>\n\t\t</footer>\n\t</div>\n\t</div>\n\n<!--insert danville script here-->\n\n</body>\n</html>';
window.shoutsTemplate = window.headTemplate+'<body>\n\t<header id="header" class="persistent">\n\t\t<h2 class="small">Shouts &#38; Murmurs</h2>\n\t\t<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t\t<div id="stack-content" class="shoutsmurmurs">\n\t\t<header>\n\t\t\t<h1><!--insert title here--></h1>\n\t\t\t<h2>by <!--insert author here--></h2>\n\t\t</header>\n\t\t<figure class="header-image">\n\t\t\t<div class="image-wrapper">\n\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->.jpg" alt="" />\n\t\t\t\t<div><a href="../HTMLResources/<!--insert gallery link here-->" class="icon-plus red"></a></div>\n\t\t\t</div>\n\t\t</figure>\n\t\t<div class="content">\n<!--insert content here-->\n\t\t</div>\n\t\t<footer>\n\t\t\t<h6><!--insert credit here--></h6>\n\t\t\t<a href="#" class="icon-top red"></a>\n\t\t</footer>\n\t</div>\n\n<!--insert danville script here-->\n\n</body>\n</html>';
window.talkOpenerTemplate = '<!DOCTYPE html>\n<html laneg="en">\n<head>  \n\t<title></title> \n\t<meta charset="utf-8" />   \n\t<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/> \n\t<meta name="misapplication-tap-highlight" content="no"/>\n\t<link rel="stylesheet" href="../HTMLResources/production/css/tny_styles.css" type="text/css" />\n\t<script src="../HTMLResources/production/js/app.min.js"></script>\n</head>\n<body>\n\t<header id="header" class="persistent">\n\t\t<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t\t<div id="stack-content" class="talk-opener">\n\t\t\t<header>\n\t\t\t\t\<img src="../HTMLResources/img/talk_opener_header.jpg" />\n\t\t\t\t\<h1>The Talk of the Town</h1>\n\t\t\t</header>\n\t\t\t<ul class="comment">\n\t\t\t\t<li>\n\t\t\t\t\t<a href="navto://1500_comm_<!--insert date here-->">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>comment</h4>\n\t\t\t\t\t\t\t<h2><!--insert title here--></h2>\n\t\t\t\t\t\t\t<h3>by <!--insert author here--></h3>\n\t\t\t\t\t\t\t<!--insert blurb here-->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<img src="../HTMLResources/media/comm_<!--insert date here-->/<!--insert date here-->_<!--insert r number here-->.jpg" />\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<ul>\n<!--insert talk here-->\n\t\t\t\t<li>\n\t\t\t\t\t<a href="http://www.newyorker.com/online/blogs/comment" class="web-article comment">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>Daily Comment</h4>\n\t\t\t\t\t\t\t<p>Opinions, arguments, and reflections on the news.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span class="icon-weblink red"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href="http://www.newyorker.com/online/blogs/closeread" class="web-article">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>Close Read</h4>\n\t\t\t\t\t\t\t<p>Amy Davidson on war, sports, and everything in between.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span class="icon-weblink red"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\n<!--insert danville script here-->\n\n</body>\n</html';
window.brieflyTemplate = window.headTemplate+'<body>\n\t<header id="header" class="persistent">\n\t\t<h2 class="small">Briefly Noted</h2>\n\t\t<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t\t<div id="stack-content" class="tny-briefly">\n\t\t\t<section class="content">\n<!--insert content here-->\n\t\t\t</section>\n\t\t<footer>\n\t\t\t<a href="#" class="icon-top red"></a>\n\t\t</footer>\n\t\t</div>\n\t</div>\n\n<!--insert danville script here-->\n\n\n<!--insert danville script here-->\n\n</body>\n</html>';
window.mailTemplate = '<!DOCTYPE html>\n<html>\n<head>  \n\t<title></title>    \n\t<meta charset="utf-8" />   \n\t<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/> \n\t<meta name="misapplication-tap-highlight" content="no"/>\n\t<script src="../HTMLResources/production/js/app.min.js"></script>\n\t<link rel="stylesheet" href="../HTMLResources/production/css/tny_styles.css" type="text/css" />\n\t<script>window.tnyToolbox = {<!--insert toolbox here-->};</script>\n</head>\n<body>\n\t<header id="header" class="persistent">\n\t\t<h2 class="regular">The Mail</h2>\n\t\t<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t\t<div id="stack-content" class="mail">\n\t\t\t<img src="../HTMLResources/img/mail.jpg" class="section-header-image" />\n\t\t\t<section>\n<!--insert content here-->\n\t\t\t\t<div class="mail-note">\n\t\t\t\t\t<p>Letters should be sent with the writer&#8217;s name, address, and daytime phone number via e-mail to <a href="mailto:themail@newyorker.com">themail@newyorker.com</a>. Letters and Web comments may be edited for length and clarity, and may be published in any medium. We regret that owing to the volume of correspondence we cannot reply to every letter or return letters.</p> \n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t</div>\n</body>\n</html>';
window.contributorsTemplate = '<!DOCTYPE html>\n<html>\n<head>  \n\t<title></title>    \n\t<meta charset="utf-8" />   \n\t<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/> \n\t<meta name="misapplication-tap-highlight" content="no"/>\n\t<script src="../HTMLResources/production/js/app.min.js"></script>\n\t<link rel="stylesheet" href="../HTMLResources/production/css/tny_styles.css" type="text/css" />\n</head>\n<body>\n\t<header id="header" class="persistent">\n		<h2>Contributors</h2>\n		<a href="#" class="icon-resize white right"></a>\n\t</header>\n\t<div id="page-wrapper" class="overthrow">\n\t\t<div id="stack-content" class="contributors">\n\t\t\t<img src="../HTMLResources/img/contribs.jpg" class="section-header-image" />\n\t\t\t<ul>\n<!--insert content here-->\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</body>\n</html>';
window.tocTemplate = window.headTemplate+'<body>\r\t<header id="header" class="persistent">\r\t\t<h2 class="regular">Table of Contents</h2>\r\t\t<a href="#" class="icon-resize white right"></a>\r\t</header>\r\t<div id="page-wrapper" class="overthrow">\r\t\t<div id="stack-content" class="toc">\r\t\t\t<header>\r\t\r\t\t\t\t<h1></h1>\r\t\t\t\t<h2><time datetime="YYYY-MM-DD"><!--insert formatted date here--></time></h2>\r\t\t\t\t<!-- <h1 class="special red"></h1> SPECIAL ISSUE TITLE HERE-->\r\t\t\t</header>\r\t\t\t<ul id="issue-nav">\r\t\t\t\t<!--insert cover here-->\r\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://0070_how_to">\r\t\t\t\t\t\t<h4>Dept. of Explanation</h4>\r\t\t\t\t\t\t<h6>Instructions and tips.</h6>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://0200_cont_<!--insert date here-->">\r\t\t\t\t\t\t<h4>Contributors</h4>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://0300_mail_<!--insert date here-->">\r\t\t\t\t\t\t<h4>The Mail</h4>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://0400_goat_menu_<!--insert date here-->">\r\t\t\t\t\t\t<h4>Goings On About Town</h4>\r\t\t\t\t\t\t<span class="icon-video grey"></span>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://1400_talk_menu_<!--insert date here-->">\r\t\t\t\t\t\t<h4>The Talk of The Town</h4>\r\t\t\t\t\t\t<h6>Blurb tk, blurb tk, blurb tk, blurb tk, blurb tk, blurb tk, blurb tk, blurb tk, blurb tk.</h6>\r\t\t\t\t\t\t<span class="icon-weblink grey"></span>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t\t<hr />\r\t\t\t\t<!--insert toc depts here-->\r\t\t\t\t<hr /> \r\r\t\t\t\t<!-- THE CRITICS -->\r\t\t\t\t<!--insert toc crits here-->\r\t\t\t\t<hr />\r\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://6000_dept_back_page_<!--insert date here-->">\r\t\t\t\t\t\t<h4>Cartoon Caption Contest</h4>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://7000_cart_cartoons_<!--insert date here-->">\r\t\t\t\t\t\t<h4>Cartoon Gallery</h4>\r\t\t\t\t\t\t<h6>With bonus cartoons. Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK, Artist TK.</h6>\r\t\t\t\t\t\t<span class="icon-slideshow grey"></span>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t\t<li>\r\t\t\t\t\t<h4>Spots</h4>\r\t\t\t\t\t<h3>Artist TK</h3>\r\t\t\t\t</li>\r\t\t\t<!--THIS IS FOR WHEN THERE IS A CARTOON IN THE TOC -->\r<!-- \t\t\t\t<li class="toc-cartoon">\t\t\r\t\t\t\t\t<aside class="cartoon">\r\t\t\t\t\t\t<a href="../HTMLResources/cartoon-carousel/cartoon-carousel.html#a17909">\r\t\t\t\t\t\t\t<div><span class="icon-plus red"></span></div>\r\t\t\t\t\t\t\t<img src="../HTMLResources/media/cartoons/131223_a17909.jpg" alt="" />\r\t\t\t\t\t\t\t<span></span>\r\t\t\t\t\t\t</a>\r\t\t\t\t\t</aside>\r\t\t\t\t</li>\r -->\t\t\t\t<li class="web-tout">\r\t\t\t\t\t<a href="http://www.newyorker.com">\r\t\t\t\t\t\t<img src="../HTMLResources/img/toc_web_tout.jpg" />\r\t\t\t\t\t\t<h4>www.newyorker.com</h4>\r\t\t\t\t\t\t<h6>Up to a dozen new stories a day.</h6>\r\t\t\t\t\t\t<span class="icon-weblink red"></span>\r\t\t\t\t\t</a>\r\t\t\t\t</li>\r\t\t\t</ul>\r\t\t\t\r\t\t\t<footer>\r\t\t\t\t<p>THE NEW YORKER IS A REGISTERED TRADEMARK OF ADVANCE MAGAZINE PUBLISHERS INC. COPYRIGHT &copy;2014 COND&#201; NAST. ALL RIGHTS RESERVED. PRINTED IN THE U.S.A. Volume <!--insert volume number here-->, No. <!--insert issue number here-->, <!--insert formatted date here-->. The New Yorker (ISSN 0028-792X) is published weekly (except for five combined issues: February 17 &#38; 24, June 9 &#38; 16, July 7 &#38; 14, August 11 &#38; 18,  and December 22 &#38; 29) by Cond&#233; Nast, which is a division of Advance Magazine Publishers Inc. Principal office: The Cond&#233; Nast Building, 4 Times Square, New York, NY 10036. Elizabeth Hughes, vice-president and publisher; Beth Lusko, associate publisher advertising; James Guilfoyle, director of finance and business operations; Fabio Bertoni, general counsel. Cond&#233; Nast: S. I. Newhouse, Jr., chairman; Charles H. Townsend, chief executive officer; Robert A. Sauerberg, Jr., president; John W. Bellando, chief operating officer &#38; chief financial officer; Jill Bright, chief administrative officer. Periodicals postage paid at New York, NY, and at additional mailing offices. Canada Post Publications Mail Agreement No. 40644503. Canadian Goods and Services Tax Registration No. 123242885-RT0001. Canada Post: return undeliverable Canadian addresses to P.O. Box 874, Station Main, Markham, ON L3P 8L4.</p>\r\r\t\t\t\t<p>POSTMASTER: SEND ADDRESS CHANGES TO THE NEW YORKER, P.O. Box 37684, Boone, IA 50037&#160;0684. FOR SUBSCRIPTIONS, ADDRESS CHANGES, ADJUSTMENTS, OR BACK ISSUE INQUIRIES: Please write to The New Yorker, P.O. Box 37684, Boone, IA 50037&#160;0684, call (800)&#160;825-2510, or e-mail subscriptions@newyorker.com. Please give both new and old addresses as printed on most recent label. Subscribers: If the Post Office alerts us that your magazine is undeliverable, we have no further obligation unless we receive a corrected address within one year. If during your subscription term or up to one year after the magazine becomes undeliverable, you are ever dissatisfied with your subscription, let us know. You will receive a full refund on all unmailed issues. First copy of new subscription will be mailed within four weeks after receipt of order. For advertising inquiries, please call Beth Lusko at (212)&#160;286-4454. For submission guidelines, please refer to our Web site, www.newyorker.com. Address all editorial, business, and production correspondence to The New Yorker, 4 Times Square, New York, NY 10036. For cover reprints, please call (800)&#160;897-8666, or e-mail covers@cartoonbank.com. For permissions and reprint requests, please call (212)&#160;630-5656 or fax requests to (212)&#160;630-5883. No part of this periodical may be reproduced without the consent of The New Yorker. The New Yorker&#8217;s name and logo, and the various titles and headings herein, are trademarks of Advance Magazine Publishers Inc. Visit us online at www.newyorker.com. To subscribe to other Cond&#233; Nast magazines, visit www.condenet.com. Occasionally, we make our subscriber list available to carefully screened companies that offer products and services that we believe would interest our readers. If you do not want to receive these offers and/or information, please advise us at P.O. Box 37684, Boone, IA 50037&#160;0684 or call (800)&#160;825-2510.</p>\r\r\t\t\t\t<p>THE NEW YORKER IS NOT RESPONSIBLE FOR THE RETURN OR LOSS OF, OR FOR DAMAGE OR ANY OTHER INJURY TO, UNSOLICITED MANUSCRIPTS, UNSOLICITED ART WORK (INCLUDING, BUT NOT LIMITED TO, DRAWINGS, PHOTOGRAPHS, AND TRANSPARENCIES), OR ANY OTHER UNSOLICITED MATERIALS. THOSE SUBMITTING MANUSCRIPTS, PHOTOGRAPHS, ART WORK, OR OTHER MATERIALS FOR CONSIDERATION SHOULD NOT SEND ORIGINALS, UNLESS SPECIFICALLY REQUESTED TO DO SO BY THE NEW YORKER IN WRITING.</p>\r\r\t\t\t\t<p><a href="../HTMLResources/9500_terms_of_use/9500_terms_of_use.html">View the User Agreement and Privacy Policy for The New Yorker Reader Digital Edition.</a></p>\r\t\t\t</footer>\r\t\t</div>\r\t</div>\r</body>\r</html>';

// department layout templates
window.layoutHTMLTemplates = {
	".horizontal-header-first" : '\n\t<header id="opener" class="horizontal-header-first">\n\t\t\t<!--.land-bleed .port-bleed--><div class="inner">\n\t\t\t\t<div class="header-group">\n\t\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t\t<h3><!--insert deck here--></h3>\n\t\t\t\t\t<h2>By <!--insert author here--></h2>\n\t\t\t\t</div>\n\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->_crop.jpg"  class="mobile" /><!--insert image html here-->\n\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div><!--insert caption here-->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>',
	".horizontal-header-last" : '\n\t<header id="opener" class="horizontal-header-last">\n\t\t\t<!--.land-bleed .port-bleed--><div class="inner">\n\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->_crop.jpg"  class="mobile" /><!--insert image html here-->\n\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div><!--insert caption here-->\n\t\t\t\t</div>\n\t\t\t\t<div class="header-group">\n\t\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t\t<h3><!--insert deck here--></h3>\n\t\t\t\t\t<h2>By <!--insert author here--></h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>',
	".square-header-first" : '\n\t<header id="opener" class="square-header-first">\n\t\t\t<!--.land-bleed .port-bleed--><div class="inner port-bleed">\n\t\t\t\t<div class="header-group">\n\t\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t\t<h3><!--insert deck here--></h3>\n\t\t\t\t\t<h2>By <!--insert author here--></h2>\n\t\t\t\t</div>\n\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->_crop.jpg"  class="mobile" /><!--insert image html here-->\n\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div><!--insert caption here-->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>',
	".square-header-last" : '\n\t<header id="opener" class="square-header-last ">\n\t\t\t<!--.land-bleed .port-bleed--><div class="inner">\n\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->_crop.jpg"  class="mobile" /><!--insert image html here-->\n\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div><!--insert caption here-->\n\t\t\t\t</div>\n\t\t\t\t<div class="header-group">\n\t\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t\t<h3><!--insert deck here--></h3>\n\t\t\t\t\t<h2>By <!--insert author here--></h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>',
	".vertical-header-first" : '\n\t<header id="opener" class="vertical-header-first">\n\t\t\t<!--.land-bleed .port-bleed--><div class="inner">\n\t\t\t\t<div class="header-group">\n\t\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t\t<h3><!--insert deck here--></h3>\n\t\t\t\t\t<h2>By <!--insert author here--></h2>\n\t\t\t\t</div>\n\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->_crop.jpg"  class="mobile" /><!--insert image html here-->\n\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div><!--insert caption here-->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>',
	".vertical-header-last" : '\n\t<header id="opener" class="vertical-header-last">\n\t\t\t<!--.land-bleed .port-bleed--><div class="inner">\n\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->_crop.jpg"  class="mobile" /><!--insert image html here-->\n\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div><!--insert caption here-->\n\t\t\t\t</div>\n\t\t\t\t<div class="header-group">\n\t\t\t\t\t<h1><!--insert title here--></h1>\n\t\t\t\t\t<h3><!--insert deck here--></h3>\n\t\t\t\t\t<h2>By <!--insert author here--></h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>',
	".fiction" : '\n\t<header id="opener" class="fiction">\n\t\t\t<!--.land-bleed .port-bleed--><div class="inner">\n\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->.jpg" />\n\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>'
}

// elements templates
window.cartoonTemplate = '\t<aside class="cartoon">\n\t\t<a href="../HTMLResources/cartoon-carousel/cartoon-carousel.html#<!--insert a number here-->">\n\t\t\t<div><span class="icon-plus red"></span></div>\n\t\t\t<img src="../HTMLResources/media/cartoons/<!--insert date here-->_<!--insert a number here-->.jpg" alt="" />\n\t\t\t<span><!--insert caption here--></span>\n\t\t</a>\n\t</aside>';
window.cartoonArchiveTemplate = '\t<aside class="cartoon">\n\t<div class="archive-header">\n\t\t<h4>From The Archive</h4>\n\t\t<h5><!--insert archive toon date here--></h5>\n\t</div>\n\t\t<a href="../HTMLResources/cartoon-carousel/cartoon-carousel.html#<!--insert a number here-->">\n\t\t\t<div><span class="icon-plus red"></span></div>\n\t\t\t<img src="../HTMLResources/media/cartoons/<!--insert date here-->_<!--insert a number here-->.jpg" alt="" />\n\t\t\t<span><!--insert caption here--></span>\n\t\t</a>\n\t</aside>';
window.spotTemplate = '<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->.jpg" class="spot h"/>';
window.artTemplate = '<figure>\n\t<div class="inner">\n\t\t<div class="image-wrapper">\n\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->.jpg" />\n\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div>\n\t\t</div><!--insert caption here--></figcaption>\n\t</div>\n</figure>';
window.newsbreakTemplate = '\t\t\t<div class="newsbreak">\n\t\t\t\t<header>\n\t\t\t\t\t<h4><smallcaps><!--insert newsbreak title here--></smallcaps></h4>\n\t\t\t\t\t<h5><!--insert newsbreak sub here--></h5>\n\t\t\t\t</header>\n\t\t\t\t<!--insert newsbreak text here-->\n\t\t\t</div>'

// toc templates
window.tocDept = '\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://<!--insert stackname here-->">\r\t\t\t\t\t\t<h4>Rubric TK</h4>\r\t\t\t\t\t\t<h3>Author TK</h3>\r\t\t\t\t\t\t<h6>Blurb tk, blurb tk, blurb tk, blurb tk.</h6>\r<!--insert multimedia here-->\r\t\t\t\t\t</a>\r\t\t\t\t</li>'
window.tocPoem = '\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://<!--insert stackname here-->">\r\t\t\t\t\t\t<h4>Poem</h4>\r\t\t\t\t\t\t<h3>Author TK</h3>\r\t\t\t\t\t\t<h5>&#8220;Title TK&#8221;</h5>\r<!--insert multimedia here-->\r\t\t\t\t\t</a>\r\t\t\t\t</li>';
window.tocShouts = '\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://<!--insert stackname here-->">\r\t\t\t\t\t\t<h4>Rubric TK</h4>\r\t\t\t\t\t\t<h3>Author TK</h3>\r\t\t\t\t\t</a>\r\t\t\t\t</li>';
window.tocFiction = '\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://<!--insert stackname here-->">\r\t\t\t\t\t\t<h4>Fiction</h4>\r\t\t\t\t\t\t<h3>Author TK</h3>\r\t\t\t\t\t\t<h5>&#8220;Title TK&#8221;</h5>\r<!--insert multimedia here-->\r\t\t\t\t\t</a>\r\t\t\t\t</li>';
window.tocBriefly ='\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://<!--insert stackname here-->">\r\t\t\t\t\t\t<h4>Briefly Noted</h4>\r\t\t\t\t\t</a>\r\t\t\t\t</li>';
window.tocCover = '\t\t\t\t<li>\r\t\t\t\t\t<a href="navto://0000_cover_<!--insert date here-->">\r\t\t\t\t\t\t<h4>Cover</h4>\r\t\t\t\t\t\t<h3>Author TK</h3>\r\t\t\t\t\t\t<h5>&#8220;Title TK&#8221;</h5>\r\t\t\t\t\t</a>\r\t\t\t\t</li>';

// Extra tool templates
window.toolboxTemplate = '\n\t\t"showOnLoad" : false,\n\t\t"mini" : false,\n\t\t"media" : [\n<!--insert touts here-->\n\t\t],\n\t\t"social" : [\n\t\t\t{"name":"facebook", "link":"<!--insert facebook here-->"},\n\t\t\t{"name":"twitter", "link":"<!--insert twitter here-->"},\n\t\t\t{"name":"email", "link":"<!--insert email here-->"}\n\t\t],\n\t\t"bitly":"<!--insert bitly here-->"\n\t\n';

