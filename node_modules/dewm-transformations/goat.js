function transformGoat(condeNetXMLStr,stackName,template,location,rootDirectory) {
	if (stackName.indexOf("menu") > 0) {
		var finalHTML = transformGoatMenu(condeNetXMLStr,stackName,window.goatMenuTemplate,location,rootDirectory);
	} else if (stackName.indexOf("opener") > 0) {
		var finalHTML = transformGoatOpener(condeNetXMLStr,stackName,window.goatOpenerTemplate,location,rootDirectory);
	} else if (stackName.indexOf("tables") > 0) {
		var finalHTML = transformGoatTables(condeNetXMLStr,stackName,window.goatTablesTemplate,location,rootDirectory);
	} else if (stackName.indexOf("bartab") > 0) {
		var finalHTML = transformGoatTables(condeNetXMLStr,stackName,window.goatTablesTemplate,location,rootDirectory);
	} else {
		var finalHTML = transformGoatSection(condeNetXMLStr,stackName,window.contributorsTemplate,location,rootDirectory);
	}
	return finalHTML;
}
function transformGoatTables(theCondeNetXMLText,stackName,template,location,rootDirectory) {
	copyImage(location.Image,stackName,"goat",rootDirectory)
	var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));
	danvilleHTML = danvilleHTML.replace(new RegExp("paragraph>", 'g'), "p>");
	danvilleHTML = danvilleHTML.replace(new RegExp("bold>", 'g'), "b>");
	danvilleHTML = danvilleHTML.replace(new RegExp("italic>", 'g'), "i>");
	
	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.goatToolboxTemplate.replace("<!--insert facebook here-->",location.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",location.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",location.Email);
	danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",location.Bitly);
	var tablesInfo = danvilleHTML.split('<p><em>')[danvilleHTML.split('</em></p>').length-1];
	tablesInfo = tablesInfo.split('</em></p>')[0];

	danvilleHTML = danvilleHTML.split('<p><em>')[0];
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert title here-->", 'g'), location.Title);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert rubric here-->", 'g'), location.Rubric);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert deck here-->", 'g'), location.Deck);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), location.Image);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), location.Author);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert stackname here-->", 'g'), stripStackNumber(stackName));
	danvilleHTML = danvilleHTML.replace("<!--insert crop here-->",window.goatLayout);
	danvilleHTML = danvilleHTML.replace(new RegExp('&#160;<span class="dingbat">&#9830;</span>', 'g'), '');	

	if (stackName.indexOf("tables") > 0) {
		for (var d=0, len=window.stackNames.length; d<len; d++) {
			if (window.stackNames[d].indexOf("bartab") > 0) {
				xmlBarName = window.stackNames[d];
			}
		}
		if (typeof xmlBarName != "undefined") {
			danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert bartab here-->", 'g'), '<a href="navto://'+xmlBarName+'">Bar Tab');
		}
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert tables info here-->", 'g'), tablesInfo);
	}

	danvilleHTML = danvilleHTML.replace(new RegExp("<h3><!--insert bartab here--></a></h3>", 'g'), " ");
	return danvilleHTML;
}

function transformGoatOpener(theCondeNetXMLText,stackName,template,location,rootDirectory) {
	copyImage(location.Image,stackName,"goat",rootDirectory)
	var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));
	// danvilleHTML = danvilleHTML.replace(new RegExp("paragraph>", 'g'), "p>");
	// danvilleHTML = danvilleHTML.replace(new RegExp("bold>", 'g'), "b>");
	// danvilleHTML = danvilleHTML.replace(new RegExp("italic>", 'g'), "i>");
	if (location.Author.length > 2) {
		location.Author = "&mdash; "+location.Author;
	}
	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.goatToolboxTemplate.replace("<!--insert facebook here-->",location.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",location.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",location.Email);
	danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",location.Bitly);
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace('"showOnLoad" : true','"showOnLoad" : false');
	danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
	danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), location.Image);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), location.Author);
	return danvilleHTML;
}
function transformGoatMenu(theCondeNetXMLText,stackName,template,location,rootDirectory) {
	// Know the right template to use
	if (rootDirectory.nativePath.indexOf("TNYTablet") > 0) {
	template = window.goatMenuTemplate;
	} else {
	template = window.goatMenuTemplate;
	}
	// Get the right order of the GOAT stacks so that the menu can be created
	var goatMenuStacks = new Array();
	var goatMenuXML = new Array();
	for (var i=0, len=window.stackNames.length; i<len; i++) {
	if (window.stackNames[i].indexOf("goat") > 0 && window.stackNames[i].indexOf("opener") == -1 && window.stackNames[i].indexOf("menu") == -1 ) {
		if (window.stackNames[i].indexOf("li_"+theDate) > 0 || window.stackNames[i].indexOf("") > 0) {
		} else {
			goatMenuStacks.push(window.stackNames[i]);
			if (window.stackNames[i].indexOf("food") > 0) {
				for (var d=0, len=window.condenetDirectoryFiles.length; d<len; d++) {
					if (window.condenetDirectoryFiles[d].indexOf("tables") > 0) {
						var xmlToPush = window.condenetDirectoryFiles[d].split(".")[0];
					}
				}
			} else {
				for (var z=0, len=window.condenetDirectoryFiles.length; z<len; z++) {
					if (window.condenetDirectoryFiles[z].indexOf(theDate+"goli_GOAT_"+window.xmlNames[i].split("_")[2]) == 0) {
						var xmlToPush = window.condenetDirectoryFiles[z].split(".")[0];
						z=window.condenetDirectoryFiles.length;
					} else {
						var xmlToPush = window.xmlNames[i];
					}
				}
			}
			goatMenuXML.push(xmlToPush);
		}
	}
	}
	var goatDate = generateGoatDate();
	// Generate the GOAT Menu HTML
	var goatMenuHTML = "";
	for (var w=0, len=goatMenuStacks.length; w<len; w++) {
	var currentgoatMenuHTML = generateGoatMenuList(goatMenuXML[w],goatMenuStacks[w]);
	goatMenuHTML = goatMenuHTML+currentgoatMenuHTML;
	}
	generateGoatDate(stackName);
	var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));
	danvilleHTML = danvilleHTML.replace(new RegExp("paragraph>", 'g'), "p>");
	danvilleHTML = danvilleHTML.replace(new RegExp("bold>", 'g'), "b>");
	danvilleHTML = danvilleHTML.replace(new RegExp("italic>", 'g'), "i>");
	danvilleHTML = danvilleHTML.split(" ",15).join(" ").split("<p>")[1]+"&#160;.&#160;.&#160;.&#160;";
	// Construct Danville HTML, using the variables just defined
	danvilleHTML = template.replace("<!--insert caption here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert goat date here-->", 'g'), goatDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), location.Image);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert goat menu here-->", 'g'), goatMenuHTML);
	return danvilleHTML;
}

function transformGoatSection(theCondeNetXMLText,stackName,template,location,rootDirectory) {
	// Check if it is a leadin
	if (location.Filename.indexOf("goli_") > -1) {
		var leadIn = true;
	} else {
		var leadIn = false;
	}
	if (leadIn) {
		template = window.goatLeadInTemplate.replace("<!--insert crop here-->",window.goatLayout);
		var danvilleHTML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<content>")+10,theCondeNetXMLText.indexOf("</content>"));
	// danvilleHTML = danvilleHTML.replace("<paragraph>","\t\t<p class='descender'>");
	// danvilleHTML = danvilleHTML.replace(new RegExp('<paragraph>', 'g'), "\t\t\t\t\t<p>");
	// danvilleHTML = danvilleHTML.replace(new RegExp('</paragraph>', 'g'), "</p>");
	// danvilleHTML = danvilleHTML.replace(new RegExp("<bold>", 'g'), "<strong>");
	// danvilleHTML = danvilleHTML.replace(new RegExp("</bold>", 'g'), "</strong>");
	// danvilleHTML = danvilleHTML.replace(new RegExp("<italic>", 'g'), "<em>");
	// danvilleHTML = danvilleHTML.replace(new RegExp("</italic>", 'g'), "</em>");
	danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
	danvilleHTML = danvilleHTML.replace("<!--insert listings stack here-->",window.stackNames[window.stackNames.indexOf(stackName)+1]);
	danvilleHTML = danvilleHTML.replace(new RegExp('&#160;<span class="dingbat">&#9830;</span>', 'g'), '');
	danvilleHTML = danvilleHTML.replace(new RegExp('<p>', ''), '<p class="descender">');
	// remove <br /> from theatre header if a lead-in
	if (stackName.indexOf("theatreli") > 0) window.goatHeaderText.theatre.header = "&loz; TH&omega;ATRE";
	} else {
		if (location.Image.length > 0) {
			template = window.goatNoLeadInArtTemplate.replace("<!--insert crop here-->",window.goatLayout);;
		} else {
			template = window.goatNoLeadInNoArtTemplate;
		}
		var danvilleHTML = transformGoatContent(theCondeNetXMLText,stackName);
		danvilleHTML = template.replace("<!--insert content here-->",danvilleHTML);
		if (location.Image.length < 2) {
			try {
				var sourceImageThumb = tnyVolume.resolvePath("Edit/Groups/Web/CondeNet/NPP Images/Resize_Out/"+theDateYear+"/"+theDateMonth+"/"+theDateDay+"/resize_out_de/140/"+theDate+"_"+imagename+"_cropth.png");
				var targetImageThumbTwo = rootDirectory.resolvePath("HTMLResources/media/"+stackName+"/"+theDate+"_"+imagename+"_cropth.png");
				var targetImagesParentTwo = targetImageThumbTwo.parent;
				targetImagesParentTwo.createDirectory();
				sourceImageThumb.copyTo(targetImageThumbTwo, true);
				location.Image = "goat-spot-"+location.Filename.split("_")[2];
			} catch(err) {
				location.Image = false;
			}
		}
	// add <br /> to theatre header if not a lead-in
	if (stackName.indexOf("theatre_") > 0) window.goatHeaderText.theatre.header = "&loz;<br />TH&omega;ATRE";
	}
	if (stackName.indexOf("movies_") > 0) {
		var dvdHTML = generateDVD(theCondeNetXMLText);
		danvilleHTML = danvilleHTML.replace("</ul>","\t\t\t<!--insert dvd here-->\r\t\t</ul>");
		danvilleHTML = danvilleHTML.replace("<!--insert dvd here-->",dvdHTML);
		var imagename = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<tabletmultimediaextras>")+25,theCondeNetXMLText.indexOf("</tabletmultimediaextras>")).split("<ref_1>")[1].split("</ref_1>")[0];
		imagename = imagename.split("-")[1]+"-"+imagename.split("-")[2];
		copyImage(imagename,stackName,"generic",rootDirectory);
	}
	// Construct the piece's toolbox, beginning with the Share URLs
	var danvilleToolbox = window.goatToolboxTemplate.replace("<!--insert facebook here-->",location.Facebook);
	danvilleToolbox = danvilleToolbox.replace("<!--insert twitter here-->",location.Twitter);
	danvilleToolbox = danvilleToolbox.replace("<!--insert email here-->",location.Email);
	danvilleToolbox = danvilleToolbox.replace("<!--insert bitly here-->",location.Bitly);
	if (location.Image != false) {
		copyImage(location.Image,stackName,"goat",rootDirectory)
		danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert r number here-->", 'g'), location.Image);
	} else {
		danvilleHTML = danvilleHTML.replace('<div class="go-image">\n\t\t\t\t\t\t<div class="image-wrapper">\n\t\t\t\t\t\t\t<img src="../HTMLResources/media/<!--insert stackname here-->/<!--insert date here-->_<!--insert r number here-->.jpg" />\n\t\t\t\t\t\t\t<div><a href="../HTMLResources/media/<!--insert stackname here-->/<!--insert stackname here-->_gallery.html" class="icon-plus red"></a></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>','');
	}
	danvilleHTML = danvilleHTML.replace("<!--insert toolbox here-->", danvilleToolbox);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert section here-->", 'g'), location.Title);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert lowercase section here-->", 'g'), location.Filename.split("_")[2]);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert section title here-->", 'g'), window.goatHeaderText[location.Filename.split("_")[2]].sectionTitle);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert section header here-->", 'g'), window.goatHeaderText[location.Filename.split("_")[2]].header);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert title here-->", 'g'), location.Title);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert deck here-->", 'g'), location.Deck);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert author here-->", 'g'), location.Author);
	danvilleHTML = danvilleHTML.replace(new RegExp("<!--insert stackname here-->", 'g'), stripStackNumber(stackName));
	if (leadIn == false && location.Image.length == undefined) {
		danvilleHTML = danvilleHTML.replace("<h1><span>NIGHT</span> <span>&Omicron;FE</span></h1>","<h1>NIGHT<br>&Omicron;FE</h1>");
	}
	return danvilleHTML;
}
// Function to create GOAT Menu HTML
function generateGoatMenuList(condenet,stackname) {
		var condeNetXML = window.condenetDirectory.resolvePath(condenet+".xml");
		var fileStream = new air.FileStream();
		fileStream.open(condeNetXML, air.FileMode.READ);
		var condeNetXMLStr = fileStream.readMultiByte(condeNetXML.size, air.File.systemCharset);
		fileStream.close();
	// Use built-in javascript parser to format the CondeNetXML
	var parser = new DOMParser();
	var XML = parser.parseFromString(condeNetXMLStr,"text/xml");
	var tablet = new Object();
	// Use getXMLTagInfo function (which can be found under "utility functions" in main.js) to grab various pieces
	if (condenet.indexOf("goli") > 0) {
		var rubric = getXMLTagInfo(XML,"subhead");
	} else {
		var rubric = getXMLTagInfo(XML,"title");
	}
	var image = getXMLTagInfo(XML,"image");
	var filename = getXMLTagInfo(XML,"filename");
	if (stackname.indexOf("tables") > 0) {
		rubric = "Food &#38; Drink";
	} else if (stackname.indexOf("above") > 0) {
		rubric = "Above &#38; Beyond";
	}
	if (image.length < 2) {
		image = "goat-spot-"+filename.split("_")[2];
		var path = "img/"+image+".jpg";
	} else if (stackname.indexOf("li_") > -1) {
		stackname = window.stackNames[window.stackNames.indexOf(stackname)+1];
		var path = "media/"+stripStackNumber(stackname)+"/"+theDate+"_"+image+"_cropth.png"
	} else {
		var path = "media/"+stripStackNumber(stackname)+"/"+theDate+"_"+image+"_cropth.png";
	}
	var currentgoatMenuHTML = window.goatMenuListTemplate;
	currentgoatMenuHTML = currentgoatMenuHTML.replace(new RegExp("<!--insert section here-->", 'g'), rubric);
	currentgoatMenuHTML = currentgoatMenuHTML.replace(new RegExp("<!--insert stackname here-->", 'g'), stackname);
	currentgoatMenuHTML = currentgoatMenuHTML.replace(new RegExp("<!--insert stripped stackname here-->", 'g'), stripStackNumber(stackname));
	currentgoatMenuHTML = currentgoatMenuHTML.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	currentgoatMenuHTML = currentgoatMenuHTML.replace(new RegExp("<!--insert path here-->", 'g'), path);
	return currentgoatMenuHTML;
}
// Function to generate DVD of the week HTML
function generateDVD(theCondeNetXMLText) {
	var toutsXML = theCondeNetXMLText.slice(theCondeNetXMLText.indexOf("<tabletmultimediaextras>")+25,theCondeNetXMLText.indexOf("</tabletmultimediaextras>"));
	var dvdHTML = window.goatDVDTemplate.replace(new RegExp("<!--insert date here-->", 'g'), theDate);
	dvdHTML = dvdHTML.replace(new RegExp("<!--insert credit here-->", 'g'), "credit tk");
	dvdHTML = dvdHTML.replace(new RegExp("<!--insert caption here-->", 'g'), toutsXML.split("<tout_1>")[1].split("</tout_1>")[0]);
	try {
		dvdHTML = dvdHTML.replace(new RegExp("<!--insert title here-->", 'g'), toutsXML.split("<tout_1>")[1].split("&#8220;")[1].split("</tout_1>")[0].split("&#8221;")[0].slice(0,-1));
	} catch(err) {
		alert("DVD of the Week tout text is not in yet. It will need to be added manually.");
	}
	return dvdHTML;
}
// Generate GOAT Date
function generateGoatDate() {
	var months = ["January","February","March","April","May","June","July","August","September","October","November","December"]
	var oldDate = new Date();
	var newDate = new Date();
	oldDate.setDate(d.getDate()-5);
	newDate.setDate(d.getDate()+1);
	if (oldDate.getMonth() == newDate.getMonth()) {
		var finalDateString = months[oldDate.getMonth()]+" "+oldDate.getDate()+" - "+newDate.getDate();
	} else {
		var finalDateString = months[oldDate.getMonth()]+" "+oldDate.getDate()+" - "+months[newDate.getMonth()]+" "+newDate.getDate();
	}
	return finalDateString;
}
